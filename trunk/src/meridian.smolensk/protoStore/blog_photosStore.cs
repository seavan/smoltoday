/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using MySql.Data.MySqlClient;
using meridian.smolensk;
using meridian.smolensk.system;

namespace meridian.smolensk.protoStore
{
	public partial class blog_photosStore : Meridian.IEntityStore, admin.db.IDataService<proto.blog_photos>
	{
		public blog_photosStore()
		{
			m_Items = new SortedList<long, proto.blog_photos>();
		}
		private SortedList<long, proto.blog_photos> m_Items;
		public void Commit()
		{
			//throw new NotImplementedException();
		}
		public IQueryable<proto.blog_photos> GetAll()
		{
			return Queryable.AsQueryable<proto.blog_photos>(All());
		}
		public proto.blog_photos GetById(long id)
		{
			return Get(id);
		}
		void admin.db.IDataService<proto.blog_photos>.Insert(proto.blog_photos item)
		{
			Insert(item);
		}
		void admin.db.IDataService<proto.blog_photos>.Delete(proto.blog_photos item)
		{
			Delete(item);
		}
		public proto.blog_photos CreateItem()
		{
			return new proto.blog_photos() {   };
		}
		public void AbortItem(proto.blog_photos item)
		{
			Delete(item);
		}
		public void Discard()
		{
			;
		}
		void admin.db.IDataService<proto.blog_photos>.Update(proto.blog_photos item)
		{
			Persist(item);
		}
		public object GetObject(long _id)
		{
			return Get(_id);
		}
		public System.Type GetObjectType()
		{
			return typeof(proto.blog_photos);
		}
		public void DeleteById(long _id)
		{
			Delete(Get(_id));
		}
		public void UpdateById(long _id)
		{
			Update(Get(_id));
		}
		public void LoadAggregations(Meridian _meridian)
		{
			foreach(var item in m_Items.Values)
			{
				item.LoadAggregations(_meridian);
			}
		}
		public void Select(MySqlConnection _connection)
		{
			var cmd = new MySqlCommand("SELECT `id`, `blog_id`, `original`, `list_thumbnail`, `normal_thumbnail`, `guid`, `alt`, `url` FROM blog_photos");
			cmd.Connection = _connection;
			using(var reader = cmd.ExecuteReader())
			{
				while(reader.Read())
				{
					var item = new proto.blog_photos();
					item.LoadFromReader(reader);
					m_Items[item.id] = item;
				}
			}
		}
		public proto.blog_photos Insert(MySqlConnection _connection, proto.blog_photos _item)
		{
			var cmd = new MySqlCommand("INSERT INTO blog_photos ( `blog_id`, `original`, `list_thumbnail`, `normal_thumbnail`, `guid`, `alt`, `url` ) VALUES ( @blog_id, @original, @list_thumbnail, @normal_thumbnail, @guid, @alt, @url ); SELECT LAST_INSERT_ID();"); ;
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "blog_id", Value = _item.blog_id });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "original", Value = _item.original });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "list_thumbnail", Value = _item.list_thumbnail });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "normal_thumbnail", Value = _item.normal_thumbnail });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "guid", Value = _item.guid });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "alt", Value = _item.alt });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "url", Value = _item.url });
			cmd.Connection = _connection;
			_item.id = Convert.ToInt64(cmd.ExecuteScalar());
			m_Items.Add(_item.id, _item);
			_item.LoadAggregations(Meridian.Default);
			return _item;
		}
		public proto.blog_photos Update(MySqlConnection _connection, proto.blog_photos _item)
		{
			bool changed =  false;
			var cmdText =  "";
			var cmd = new MySqlCommand("UPDATE blog_photos SET `blog_id`= @blog_id, `original`= @original, `list_thumbnail`= @list_thumbnail, `normal_thumbnail`= @normal_thumbnail, `guid`= @guid, `alt`= @alt, `url`= @url WHERE id=@id"); ;
			if(_item.mc_id)
			{
			}
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "id", Value = _item.id });
			if(_item.mc_blog_id)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "blog_id = @blog_id";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "blog_id", Value = _item.blog_id });
			}
			if(_item.mc_original)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "original = @original";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "original", Value = _item.original != null ? (object)_item.original : DBNull.Value });
			}
			if(_item.mc_list_thumbnail)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "list_thumbnail = @list_thumbnail";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "list_thumbnail", Value = _item.list_thumbnail != null ? (object)_item.list_thumbnail : DBNull.Value });
			}
			if(_item.mc_normal_thumbnail)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "normal_thumbnail = @normal_thumbnail";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "normal_thumbnail", Value = _item.normal_thumbnail != null ? (object)_item.normal_thumbnail : DBNull.Value });
			}
			if(_item.mc_guid)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "guid = @guid";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "guid", Value = _item.guid });
			}
			if(_item.mc_alt)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "alt = @alt";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "alt", Value = _item.alt != null ? (object)_item.alt : DBNull.Value });
			}
			if(_item.mc_url)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "url = @url";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "url", Value = _item.url != null ? (object)_item.url : DBNull.Value });
			}
			if(changed)
			{
				cmd.CommandText =  "UPDATE blog_photos SET " + cmdText + " WHERE id=@id";
				cmd.Connection = _connection;
				cmd.ExecuteNonQuery();
				_item.LoadAggregations(Meridian.Default);
			}
			return _item;
		}
		public proto.blog_photos Delete(MySqlConnection _connection, proto.blog_photos _item)
		{
			var cmd = new MySqlCommand("DELETE FROM blog_photos WHERE id=@id"); ;
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "id", Value = _item.id });
			cmd.Connection = _connection;
			cmd.ExecuteScalar();
			return _item;
		}
		public proto.blog_photos Insert(proto.blog_photos _item)
		{
			MeridianMonitor.Default.MySqlActionForeground((conn) => Insert(conn, _item));;
			return _item;
		}
		public proto.blog_photos Persist(proto.blog_photos _item)
		{
			if(_item.id <= 0)
			{
				_item = Insert(_item);
			}
			_item = Update(_item);
			return _item;
		}
		public proto.blog_photos Delete(proto.blog_photos _item)
		{
			_item.DeleteCompositions(Meridian.Default);
			_item.DeleteAggregations();
			m_Items.Remove(_item.id);
			MeridianMonitor.Default.MySqlActionBackground((conn) => Delete(conn, _item));;
			return _item;
		}
		public proto.blog_photos Update(proto.blog_photos _item)
		{
			MeridianMonitor.Default.MySqlActionBackground((conn) => Update(conn, _item));;
			return _item;
		}
		public IList<proto.blog_photos> All()
		{
			return m_Items.Values;
		}
		public proto.blog_photos Get(long _id)
		{
			return m_Items[_id];
		}
		public bool Exists(long _id)
		{
			return m_Items.ContainsKey(_id);
		}
		public void UpdateSync(MySqlConnection _connection, long _id, Meridian _meridian)
		{
			if (!Exists(_id))
			{
			return;
			}
			var item = Get(_id);
			var cmd = new MySqlCommand("SELECT `id`, `blog_id`, `original`, `list_thumbnail`, `normal_thumbnail`, `guid`, `alt`, `url` FROM blog_photos WHERE id = " + _id.ToString());
			cmd.Connection = _connection;
			using(var reader = cmd.ExecuteReader())
			{
				while(reader.Read())
				{
					item.DeleteCompositions(Meridian.Default);
					item.DeleteAggregations();
					item.LoadFromReader(reader);
					item.LoadAggregations(_meridian);
					item.LoadCompositions(_meridian);
				}
			}
		}
		public void InsertSync(MySqlConnection _connection, long _id, Meridian _meridian)
		{
			if(Exists(_id)) return;;
			var cmd = new MySqlCommand("SELECT `id`, `blog_id`, `original`, `list_thumbnail`, `normal_thumbnail`, `guid`, `alt`, `url` FROM blog_photos WHERE id = " + _id.ToString());
			cmd.Connection = _connection;
			using(var reader = cmd.ExecuteReader())
			{
				while(reader.Read())
				{
					var item = new proto.blog_photos();
					item.LoadFromReader(reader);
					item.LoadAggregations(_meridian);
					item.LoadCompositions(_meridian);
					m_Items.Add(item.id, item);
				}
			}
		}
		public void DeleteSync(MySqlConnection _connection, long _id, Meridian _meridian)
		{
			if (!Exists(_id))
			{
			return;
			}
			var item = Get(_id);
			item.DeleteCompositions(Meridian.Default);
			item.DeleteAggregations();
			m_Items.Remove(item.id);
		}
	}
}
