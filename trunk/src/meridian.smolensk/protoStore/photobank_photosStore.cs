/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using MySql.Data.MySqlClient;
using meridian.smolensk;
using meridian.smolensk.system;

namespace meridian.smolensk.protoStore
{
	public partial class photobank_photosStore : Meridian.IEntityStore, admin.db.IDataService<proto.photobank_photos>
	{
		public photobank_photosStore()
		{
			m_Items = new SortedList<long, proto.photobank_photos>();
		}
		private SortedList<long, proto.photobank_photos> m_Items;
		public void Commit()
		{
			//throw new NotImplementedException();
		}
		public IQueryable<proto.photobank_photos> GetAll()
		{
			return Queryable.AsQueryable<proto.photobank_photos>(All());
		}
		public proto.photobank_photos GetById(long id)
		{
			return Get(id);
		}
		void admin.db.IDataService<proto.photobank_photos>.Insert(proto.photobank_photos item)
		{
			Insert(item);
		}
		void admin.db.IDataService<proto.photobank_photos>.Delete(proto.photobank_photos item)
		{
			Delete(item);
		}
		public proto.photobank_photos CreateItem()
		{
			return new proto.photobank_photos() {   };
		}
		public void AbortItem(proto.photobank_photos item)
		{
			Delete(item);
		}
		public void Discard()
		{
			;
		}
		void admin.db.IDataService<proto.photobank_photos>.Update(proto.photobank_photos item)
		{
			Persist(item);
		}
		public object GetObject(long _id)
		{
			return Get(_id);
		}
		public System.Type GetObjectType()
		{
			return typeof(proto.photobank_photos);
		}
		public void DeleteById(long _id)
		{
			Delete(Get(_id));
		}
		public void UpdateById(long _id)
		{
			Update(Get(_id));
		}
		public void LoadAggregations(Meridian _meridian)
		{
			foreach(var item in m_Items.Values)
			{
				item.LoadAggregations(_meridian);
			}
		}
		public void Select(MySqlConnection _connection)
		{
			var cmd = new MySqlCommand("SELECT `id`, `category_id`, `account_id`, `title`, `description`, `preview`, `preview_square`, `view_count`, `download_count`, `publish_date`, `rating`, `album_id`, `is_main`, `day_photo`, `preview_main` FROM photobank_photos");
			cmd.Connection = _connection;
			using(var reader = cmd.ExecuteReader())
			{
				while(reader.Read())
				{
					var item = new proto.photobank_photos();
					item.LoadFromReader(reader);
					m_Items[item.id] = item;
				}
			}
		}
		public proto.photobank_photos Insert(MySqlConnection _connection, proto.photobank_photos _item)
		{
			var cmd = new MySqlCommand("INSERT INTO photobank_photos ( `category_id`, `account_id`, `title`, `description`, `preview`, `preview_square`, `view_count`, `download_count`, `publish_date`, `rating`, `album_id`, `is_main`, `day_photo`, `preview_main` ) VALUES ( @category_id, @account_id, @title, @description, @preview, @preview_square, @view_count, @download_count, @publish_date, @rating, @album_id, @is_main, @day_photo, @preview_main ); SELECT LAST_INSERT_ID();"); ;
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "category_id", Value = _item.category_id });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "account_id", Value = _item.account_id });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "title", Value = _item.title });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "description", Value = _item.description });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "preview", Value = _item.preview });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "preview_square", Value = _item.preview_square });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "view_count", Value = _item.view_count });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "download_count", Value = _item.download_count });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "publish_date", Value = (_item.publish_date != null && _item.publish_date.Year > 1800) ? _item.publish_date : new DateTime(1800, 1, 1) });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "rating", Value = _item.rating });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "album_id", Value = _item.album_id });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "is_main", Value = _item.is_main });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "day_photo", Value = _item.day_photo });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "preview_main", Value = _item.preview_main });
			cmd.Connection = _connection;
			_item.id = Convert.ToInt64(cmd.ExecuteScalar());
			m_Items.Add(_item.id, _item);
			_item.LoadAggregations(Meridian.Default);
			return _item;
		}
		public proto.photobank_photos Update(MySqlConnection _connection, proto.photobank_photos _item)
		{
			bool changed =  false;
			var cmdText =  "";
			var cmd = new MySqlCommand("UPDATE photobank_photos SET `category_id`= @category_id, `account_id`= @account_id, `title`= @title, `description`= @description, `preview`= @preview, `preview_square`= @preview_square, `view_count`= @view_count, `download_count`= @download_count, `publish_date`= @publish_date, `rating`= @rating, `album_id`= @album_id, `is_main`= @is_main, `day_photo`= @day_photo, `preview_main`= @preview_main WHERE id=@id"); ;
			if(_item.mc_id)
			{
			}
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "id", Value = _item.id });
			if(_item.mc_category_id)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "category_id = @category_id";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "category_id", Value = _item.category_id });
			}
			if(_item.mc_account_id)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "account_id = @account_id";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "account_id", Value = _item.account_id });
			}
			if(_item.mc_title)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "title = @title";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "title", Value = _item.title != null ? (object)_item.title : DBNull.Value });
			}
			if(_item.mc_description)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "description = @description";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "description", Value = _item.description != null ? (object)_item.description : DBNull.Value });
			}
			if(_item.mc_preview)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "preview = @preview";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "preview", Value = _item.preview != null ? (object)_item.preview : DBNull.Value });
			}
			if(_item.mc_preview_square)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "preview_square = @preview_square";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "preview_square", Value = _item.preview_square != null ? (object)_item.preview_square : DBNull.Value });
			}
			if(_item.mc_view_count)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "view_count = @view_count";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "view_count", Value = _item.view_count });
			}
			if(_item.mc_download_count)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "download_count = @download_count";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "download_count", Value = _item.download_count });
			}
			if(_item.mc_publish_date)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "publish_date = @publish_date";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "publish_date", Value = _item.publish_date });
			}
			if(_item.mc_rating)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "rating = @rating";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "rating", Value = _item.rating });
			}
			if(_item.mc_album_id)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "album_id = @album_id";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "album_id", Value = _item.album_id });
			}
			if(_item.mc_is_main)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "is_main = @is_main";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "is_main", Value = _item.is_main });
			}
			if(_item.mc_day_photo)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "day_photo = @day_photo";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "day_photo", Value = _item.day_photo });
			}
			if(_item.mc_preview_main)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "preview_main = @preview_main";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "preview_main", Value = _item.preview_main != null ? (object)_item.preview_main : DBNull.Value });
			}
			if(changed)
			{
				cmd.CommandText =  "UPDATE photobank_photos SET " + cmdText + " WHERE id=@id";
				cmd.Connection = _connection;
				cmd.ExecuteNonQuery();
				_item.LoadAggregations(Meridian.Default);
			}
			return _item;
		}
		public proto.photobank_photos Delete(MySqlConnection _connection, proto.photobank_photos _item)
		{
			var cmd = new MySqlCommand("DELETE FROM photobank_photos WHERE id=@id"); ;
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "id", Value = _item.id });
			cmd.Connection = _connection;
			cmd.ExecuteScalar();
			return _item;
		}
		public proto.photobank_photos Insert(proto.photobank_photos _item)
		{
			MeridianMonitor.Default.MySqlActionForeground((conn) => Insert(conn, _item));;
			return _item;
		}
		public proto.photobank_photos Persist(proto.photobank_photos _item)
		{
			if(_item.id <= 0)
			{
				_item = Insert(_item);
			}
			_item = Update(_item);
			return _item;
		}
		public proto.photobank_photos Delete(proto.photobank_photos _item)
		{
			_item.DeleteCompositions(Meridian.Default);
			_item.DeleteAggregations();
			m_Items.Remove(_item.id);
			MeridianMonitor.Default.MySqlActionBackground((conn) => Delete(conn, _item));;
			return _item;
		}
		public proto.photobank_photos Update(proto.photobank_photos _item)
		{
			MeridianMonitor.Default.MySqlActionBackground((conn) => Update(conn, _item));;
			return _item;
		}
		public IList<proto.photobank_photos> All()
		{
			return m_Items.Values;
		}
		public proto.photobank_photos Get(long _id)
		{
			return m_Items[_id];
		}
		public bool Exists(long _id)
		{
			return m_Items.ContainsKey(_id);
		}
		public void UpdateSync(MySqlConnection _connection, long _id, Meridian _meridian)
		{
			if (!Exists(_id))
			{
			return;
			}
			var item = Get(_id);
			var cmd = new MySqlCommand("SELECT `id`, `category_id`, `account_id`, `title`, `description`, `preview`, `preview_square`, `view_count`, `download_count`, `publish_date`, `rating`, `album_id`, `is_main`, `day_photo`, `preview_main` FROM photobank_photos WHERE id = " + _id.ToString());
			cmd.Connection = _connection;
			using(var reader = cmd.ExecuteReader())
			{
				while(reader.Read())
				{
					item.DeleteCompositions(Meridian.Default);
					item.DeleteAggregations();
					item.LoadFromReader(reader);
					item.LoadAggregations(_meridian);
					item.LoadCompositions(_meridian);
				}
			}
		}
		public void InsertSync(MySqlConnection _connection, long _id, Meridian _meridian)
		{
			if(Exists(_id)) return;;
			var cmd = new MySqlCommand("SELECT `id`, `category_id`, `account_id`, `title`, `description`, `preview`, `preview_square`, `view_count`, `download_count`, `publish_date`, `rating`, `album_id`, `is_main`, `day_photo`, `preview_main` FROM photobank_photos WHERE id = " + _id.ToString());
			cmd.Connection = _connection;
			using(var reader = cmd.ExecuteReader())
			{
				while(reader.Read())
				{
					var item = new proto.photobank_photos();
					item.LoadFromReader(reader);
					item.LoadAggregations(_meridian);
					item.LoadCompositions(_meridian);
					m_Items.Add(item.id, item);
				}
			}
		}
		public void DeleteSync(MySqlConnection _connection, long _id, Meridian _meridian)
		{
			if (!Exists(_id))
			{
			return;
			}
			var item = Get(_id);
			item.DeleteCompositions(Meridian.Default);
			item.DeleteAggregations();
			m_Items.Remove(item.id);
		}
	}
}
