/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using MySql.Data.MySqlClient;
using meridian.smolensk;
using meridian.smolensk.system;

namespace meridian.smolensk.protoStore
{
	public partial class resumesStore : Meridian.IEntityStore, admin.db.IDataService<proto.resumes>
	{
		public resumesStore()
		{
			m_Items = new SortedList<long, proto.resumes>();
		}
		private SortedList<long, proto.resumes> m_Items;
		public void Commit()
		{
			//throw new NotImplementedException();
		}
		public IQueryable<proto.resumes> GetAll()
		{
			return Queryable.AsQueryable<proto.resumes>(All());
		}
		public proto.resumes GetById(long id)
		{
			return Get(id);
		}
		void admin.db.IDataService<proto.resumes>.Insert(proto.resumes item)
		{
			Insert(item);
		}
		void admin.db.IDataService<proto.resumes>.Delete(proto.resumes item)
		{
			Delete(item);
		}
		public proto.resumes CreateItem()
		{
			return new proto.resumes() {   };
		}
		public void AbortItem(proto.resumes item)
		{
			Delete(item);
		}
		public void Discard()
		{
			;
		}
		void admin.db.IDataService<proto.resumes>.Update(proto.resumes item)
		{
			Persist(item);
		}
		public object GetObject(long _id)
		{
			return Get(_id);
		}
		public System.Type GetObjectType()
		{
			return typeof(proto.resumes);
		}
		public void DeleteById(long _id)
		{
			Delete(Get(_id));
		}
		public void UpdateById(long _id)
		{
			Update(Get(_id));
		}
		public void LoadAggregations(Meridian _meridian)
		{
			foreach(var item in m_Items.Values)
			{
				item.LoadAggregations(_meridian);
			}
		}
		public void Select(MySqlConnection _connection)
		{
			var cmd = new MySqlCommand("SELECT `id`, `post`, `first_name`, `middle_name`, `last_name`, `birth_date`, `sex`, `salary`, `photo_url`, `region_id`, `city_id`, `languages`, `exp_years`, `exp_months`, `children`, `success_description`, `about`, `address`, `phone`, `phone2`, `email`, `created`, `edited`, `account_id`, `is_publish` FROM resumes");
			cmd.Connection = _connection;
			using(var reader = cmd.ExecuteReader())
			{
				while(reader.Read())
				{
					var item = new proto.resumes();
					item.LoadFromReader(reader);
					m_Items[item.id] = item;
				}
			}
		}
		public proto.resumes Insert(MySqlConnection _connection, proto.resumes _item)
		{
			var cmd = new MySqlCommand("INSERT INTO resumes ( `post`, `first_name`, `middle_name`, `last_name`, `birth_date`, `sex`, `salary`, `photo_url`, `region_id`, `city_id`, `languages`, `exp_years`, `exp_months`, `children`, `success_description`, `about`, `address`, `phone`, `phone2`, `email`, `created`, `edited`, `account_id`, `is_publish` ) VALUES ( @post, @first_name, @middle_name, @last_name, @birth_date, @sex, @salary, @photo_url, @region_id, @city_id, @languages, @exp_years, @exp_months, @children, @success_description, @about, @address, @phone, @phone2, @email, @created, @edited, @account_id, @is_publish ); SELECT LAST_INSERT_ID();"); ;
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "post", Value = _item.post });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "first_name", Value = _item.first_name });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "middle_name", Value = _item.middle_name });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "last_name", Value = _item.last_name });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "birth_date", Value = (_item.birth_date != null && _item.birth_date.Year > 1800) ? _item.birth_date : new DateTime(1800, 1, 1) });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "sex", Value = _item.sex });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "salary", Value = _item.salary });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "photo_url", Value = _item.photo_url });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "region_id", Value = _item.region_id });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "city_id", Value = _item.city_id });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "languages", Value = _item.languages });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "exp_years", Value = _item.exp_years });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "exp_months", Value = _item.exp_months });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "children", Value = _item.children });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "success_description", Value = _item.success_description });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "about", Value = _item.about });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "address", Value = _item.address });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "phone", Value = _item.phone });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "phone2", Value = _item.phone2 });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "email", Value = _item.email });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "created", Value = (_item.created != null && _item.created.Year > 1800) ? _item.created : new DateTime(1800, 1, 1) });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "edited", Value = (_item.edited != null && _item.edited.Year > 1800) ? _item.edited : new DateTime(1800, 1, 1) });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "account_id", Value = _item.account_id });
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "is_publish", Value = _item.is_publish });
			cmd.Connection = _connection;
			_item.id = Convert.ToInt64(cmd.ExecuteScalar());
			m_Items.Add(_item.id, _item);
			_item.LoadAggregations(Meridian.Default);
			return _item;
		}
		public proto.resumes Update(MySqlConnection _connection, proto.resumes _item)
		{
			bool changed =  false;
			var cmdText =  "";
			var cmd = new MySqlCommand("UPDATE resumes SET `post`= @post, `first_name`= @first_name, `middle_name`= @middle_name, `last_name`= @last_name, `birth_date`= @birth_date, `sex`= @sex, `salary`= @salary, `photo_url`= @photo_url, `region_id`= @region_id, `city_id`= @city_id, `languages`= @languages, `exp_years`= @exp_years, `exp_months`= @exp_months, `children`= @children, `success_description`= @success_description, `about`= @about, `address`= @address, `phone`= @phone, `phone2`= @phone2, `email`= @email, `created`= @created, `edited`= @edited, `account_id`= @account_id, `is_publish`= @is_publish WHERE id=@id"); ;
			if(_item.mc_id)
			{
			}
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "id", Value = _item.id });
			if(_item.mc_post)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "post = @post";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "post", Value = _item.post != null ? (object)_item.post : DBNull.Value });
			}
			if(_item.mc_first_name)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "first_name = @first_name";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "first_name", Value = _item.first_name != null ? (object)_item.first_name : DBNull.Value });
			}
			if(_item.mc_middle_name)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "middle_name = @middle_name";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "middle_name", Value = _item.middle_name != null ? (object)_item.middle_name : DBNull.Value });
			}
			if(_item.mc_last_name)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "last_name = @last_name";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "last_name", Value = _item.last_name != null ? (object)_item.last_name : DBNull.Value });
			}
			if(_item.mc_birth_date)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "birth_date = @birth_date";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "birth_date", Value = _item.birth_date });
			}
			if(_item.mc_sex)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "sex = @sex";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "sex", Value = _item.sex });
			}
			if(_item.mc_salary)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "salary = @salary";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "salary", Value = _item.salary });
			}
			if(_item.mc_photo_url)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "photo_url = @photo_url";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "photo_url", Value = _item.photo_url != null ? (object)_item.photo_url : DBNull.Value });
			}
			if(_item.mc_region_id)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "region_id = @region_id";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "region_id", Value = _item.region_id });
			}
			if(_item.mc_city_id)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "city_id = @city_id";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "city_id", Value = _item.city_id });
			}
			if(_item.mc_languages)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "languages = @languages";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "languages", Value = _item.languages != null ? (object)_item.languages : DBNull.Value });
			}
			if(_item.mc_exp_years)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "exp_years = @exp_years";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "exp_years", Value = _item.exp_years });
			}
			if(_item.mc_exp_months)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "exp_months = @exp_months";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "exp_months", Value = _item.exp_months });
			}
			if(_item.mc_children)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "children = @children";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "children", Value = _item.children });
			}
			if(_item.mc_success_description)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "success_description = @success_description";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "success_description", Value = _item.success_description != null ? (object)_item.success_description : DBNull.Value });
			}
			if(_item.mc_about)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "about = @about";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "about", Value = _item.about != null ? (object)_item.about : DBNull.Value });
			}
			if(_item.mc_address)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "address = @address";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "address", Value = _item.address != null ? (object)_item.address : DBNull.Value });
			}
			if(_item.mc_phone)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "phone = @phone";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "phone", Value = _item.phone != null ? (object)_item.phone : DBNull.Value });
			}
			if(_item.mc_phone2)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "phone2 = @phone2";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "phone2", Value = _item.phone2 != null ? (object)_item.phone2 : DBNull.Value });
			}
			if(_item.mc_email)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "email = @email";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "email", Value = _item.email != null ? (object)_item.email : DBNull.Value });
			}
			if(_item.mc_created)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "created = @created";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "created", Value = _item.created });
			}
			if(_item.mc_edited)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "edited = @edited";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "edited", Value = _item.edited });
			}
			if(_item.mc_account_id)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "account_id = @account_id";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "account_id", Value = _item.account_id });
			}
			if(_item.mc_is_publish)
			{
				changed =  true;
				cmdText += (cmdText.Length > 0 ? ", " : "") + "is_publish = @is_publish";
				cmd.Parameters.Add( new MySqlParameter() { ParameterName = "is_publish", Value = _item.is_publish });
			}
			if(changed)
			{
				cmd.CommandText =  "UPDATE resumes SET " + cmdText + " WHERE id=@id";
				cmd.Connection = _connection;
				cmd.ExecuteNonQuery();
				_item.LoadAggregations(Meridian.Default);
			}
			return _item;
		}
		public proto.resumes Delete(MySqlConnection _connection, proto.resumes _item)
		{
			var cmd = new MySqlCommand("DELETE FROM resumes WHERE id=@id"); ;
			cmd.Parameters.Add( new MySqlParameter() { ParameterName = "id", Value = _item.id });
			cmd.Connection = _connection;
			cmd.ExecuteScalar();
			return _item;
		}
		public proto.resumes Insert(proto.resumes _item)
		{
			MeridianMonitor.Default.MySqlActionForeground((conn) => Insert(conn, _item));;
			return _item;
		}
		public proto.resumes Persist(proto.resumes _item)
		{
			if(_item.id <= 0)
			{
				_item = Insert(_item);
			}
			_item = Update(_item);
			return _item;
		}
		public proto.resumes Delete(proto.resumes _item)
		{
			_item.DeleteCompositions(Meridian.Default);
			_item.DeleteAggregations();
			m_Items.Remove(_item.id);
			MeridianMonitor.Default.MySqlActionBackground((conn) => Delete(conn, _item));;
			return _item;
		}
		public proto.resumes Update(proto.resumes _item)
		{
			MeridianMonitor.Default.MySqlActionBackground((conn) => Update(conn, _item));;
			return _item;
		}
		public IList<proto.resumes> All()
		{
			return m_Items.Values;
		}
		public proto.resumes Get(long _id)
		{
			return m_Items[_id];
		}
		public bool Exists(long _id)
		{
			return m_Items.ContainsKey(_id);
		}
		public void UpdateSync(MySqlConnection _connection, long _id, Meridian _meridian)
		{
			if (!Exists(_id))
			{
			return;
			}
			var item = Get(_id);
			var cmd = new MySqlCommand("SELECT `id`, `post`, `first_name`, `middle_name`, `last_name`, `birth_date`, `sex`, `salary`, `photo_url`, `region_id`, `city_id`, `languages`, `exp_years`, `exp_months`, `children`, `success_description`, `about`, `address`, `phone`, `phone2`, `email`, `created`, `edited`, `account_id`, `is_publish` FROM resumes WHERE id = " + _id.ToString());
			cmd.Connection = _connection;
			using(var reader = cmd.ExecuteReader())
			{
				while(reader.Read())
				{
					item.DeleteCompositions(Meridian.Default);
					item.DeleteAggregations();
					item.LoadFromReader(reader);
					item.LoadAggregations(_meridian);
					item.LoadCompositions(_meridian);
				}
			}
		}
		public void InsertSync(MySqlConnection _connection, long _id, Meridian _meridian)
		{
			if(Exists(_id)) return;;
			var cmd = new MySqlCommand("SELECT `id`, `post`, `first_name`, `middle_name`, `last_name`, `birth_date`, `sex`, `salary`, `photo_url`, `region_id`, `city_id`, `languages`, `exp_years`, `exp_months`, `children`, `success_description`, `about`, `address`, `phone`, `phone2`, `email`, `created`, `edited`, `account_id`, `is_publish` FROM resumes WHERE id = " + _id.ToString());
			cmd.Connection = _connection;
			using(var reader = cmd.ExecuteReader())
			{
				while(reader.Read())
				{
					var item = new proto.resumes();
					item.LoadFromReader(reader);
					item.LoadAggregations(_meridian);
					item.LoadCompositions(_meridian);
					m_Items.Add(item.id, item);
				}
			}
		}
		public void DeleteSync(MySqlConnection _connection, long _id, Meridian _meridian)
		{
			if (!Exists(_id))
			{
			return;
			}
			var item = Get(_id);
			item.DeleteCompositions(Meridian.Default);
			item.DeleteAggregations();
			m_Items.Remove(item.id);
		}
	}
}
