/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Script.Serialization;
using MySql.Data.MySqlClient;
using meridian.smolensk;
using meridian.smolensk.system;

namespace meridian.smolensk.proto
{
	[MetadataType(typeof(restaurants_reserve_meta))]	public partial class restaurants_reserve : admin.db.IDatabaseEntity
	{
		public restaurants_reserve()
		{
		}
		private long m_id = 0;
		internal bool mc_id { get; private set; }
		private DateTime m_create_date = DateTime.MinValue;
		internal bool mc_create_date { get; private set; }
		private string m_contact = "";
		internal bool mc_contact { get; private set; }
		private string m_phone = "";
		internal bool mc_phone { get; private set; }
		private DateTime m_visit_date = DateTime.MinValue;
		internal bool mc_visit_date { get; private set; }
		private int m_persons_count = 0;
		internal bool mc_persons_count { get; private set; }
		private long m_account_id = 0;
		internal bool mc_account_id { get; private set; }
		private long m_restaraunt_id = 0;
		internal bool mc_restaraunt_id { get; private set; }
		public void LoadFromReader(MySqlDataReader _reader)
		{
			m_id = _reader["id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("id") : 0;
			mc_id = false;
			m_create_date = _reader["create_date"].GetType() != typeof(System.DBNull) ? _reader.GetDateTime("create_date") : DateTime.MinValue;
			mc_create_date = false;
			m_contact = _reader["contact"].GetType() != typeof(System.DBNull) ? _reader.GetString("contact") : "";
			mc_contact = false;
			m_phone = _reader["phone"].GetType() != typeof(System.DBNull) ? _reader.GetString("phone") : "";
			mc_phone = false;
			m_visit_date = _reader["visit_date"].GetType() != typeof(System.DBNull) ? _reader.GetDateTime("visit_date") : DateTime.MinValue;
			mc_visit_date = false;
			m_persons_count = _reader["persons_count"].GetType() != typeof(System.DBNull) ? _reader.GetInt32("persons_count") : 0;
			mc_persons_count = false;
			m_account_id = _reader["account_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("account_id") : 0;
			mc_account_id = false;
			m_restaraunt_id = _reader["restaraunt_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("restaraunt_id") : 0;
			mc_restaraunt_id = false;
		}
		public void LoadAggregations(Meridian _meridian)
		{
		}
		public void DeleteAggregations()
		{
		}
		public void LoadCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public void SaveCompositions(Meridian _meridian)
		{
		}
		public void DeleteCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public string ProtoName
		{
			get { return "restaurants_reserve"; }
		}
		/* metafile template 
		internal class restaurants_reserve_meta
		{
			public long id { get; set; }
			public DateTime create_date { get; set; }
			public string contact { get; set; }
			public string phone { get; set; }
			public DateTime visit_date { get; set; }
			public int persons_count { get; set; }
			public long account_id { get; set; }
			public long restaraunt_id { get; set; }
		}
		 metafile template */
		public long id
		{
			get
			{
				return m_id;
			}
			set
			{
				if(m_id != value)
				{
					m_id = value != null ? value : 0;
					mc_id = true;
					// call update worker thread;
				}
			}
		}
		public DateTime create_date
		{
			get
			{
				return m_create_date;
			}
			set
			{
				if(m_create_date != value)
				{
					m_create_date = value != null ? value : DateTime.MinValue;
					if(m_create_date.Year < 1800) value = DateTime.MinValue;
					mc_create_date = true;
					// call update worker thread;
				}
			}
		}
		public string contact
		{
			get
			{
				return m_contact;
			}
			set
			{
				if(m_contact != value)
				{
					m_contact = value != null ? value : "";
					mc_contact = true;
					// call update worker thread;
				}
			}
		}
		public string phone
		{
			get
			{
				return m_phone;
			}
			set
			{
				if(m_phone != value)
				{
					m_phone = value != null ? value : "";
					mc_phone = true;
					// call update worker thread;
				}
			}
		}
		public DateTime visit_date
		{
			get
			{
				return m_visit_date;
			}
			set
			{
				if(m_visit_date != value)
				{
					m_visit_date = value != null ? value : DateTime.MinValue;
					if(m_visit_date.Year < 1800) value = DateTime.MinValue;
					mc_visit_date = true;
					// call update worker thread;
				}
			}
		}
		public int persons_count
		{
			get
			{
				return m_persons_count;
			}
			set
			{
				if(m_persons_count != value)
				{
					m_persons_count = value != null ? value : 0;
					mc_persons_count = true;
					// call update worker thread;
				}
			}
		}
		public long account_id
		{
			get
			{
				return m_account_id;
			}
			set
			{
				if(m_account_id != value)
				{
					m_account_id = value != null ? value : 0;
					mc_account_id = true;
					// call update worker thread;
				}
			}
		}
		public long restaraunt_id
		{
			get
			{
				return m_restaraunt_id;
			}
			set
			{
				if(m_restaraunt_id != value)
				{
					m_restaraunt_id = value != null ? value : 0;
					mc_restaraunt_id = true;
					// call update worker thread;
				}
			}
		}
	}
}
