/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Script.Serialization;
using MySql.Data.MySqlClient;
using meridian.smolensk;
using meridian.smolensk.system;

namespace meridian.smolensk.proto
{
	[MetadataType(typeof(main_page_widgets_meta))]	public partial class main_page_widgets : admin.db.IDatabaseEntity
	{
		public main_page_widgets()
		{
		}
		private long m_id = 0;
		internal bool mc_id { get; private set; }
		private string m_temperature = "";
		internal bool mc_temperature { get; private set; }
		private string m_sky = "";
		internal bool mc_sky { get; private set; }
		private string m_sky_icon = "";
		internal bool mc_sky_icon { get; private set; }
		private System.Decimal m_eur_price = new Decimal();
		internal bool mc_eur_price { get; private set; }
		private System.Decimal m_eur_change = new Decimal();
		internal bool mc_eur_change { get; private set; }
		private System.Decimal m_usd_price = new Decimal();
		internal bool mc_usd_price { get; private set; }
		private System.Decimal m_usd_change = new Decimal();
		internal bool mc_usd_change { get; private set; }
		private int m_jams_degree = 0;
		internal bool mc_jams_degree { get; private set; }
		private string m_jams_description = "";
		internal bool mc_jams_description { get; private set; }
		private string m_sky_icon_morning = "";
		internal bool mc_sky_icon_morning { get; private set; }
		private string m_sky_icon_afternoon = "";
		internal bool mc_sky_icon_afternoon { get; private set; }
		private string m_sky_icon_evening = "";
		internal bool mc_sky_icon_evening { get; private set; }
		private string m_sky_morning = "";
		internal bool mc_sky_morning { get; private set; }
		private string m_sky_afternoon = "";
		internal bool mc_sky_afternoon { get; private set; }
		private string m_sky_evening = "";
		internal bool mc_sky_evening { get; private set; }
		private string m_temperature_morning = "";
		internal bool mc_temperature_morning { get; private set; }
		private string m_temperature_afternoon = "";
		internal bool mc_temperature_afternoon { get; private set; }
		private string m_temperature_evening = "";
		internal bool mc_temperature_evening { get; private set; }
		public void LoadFromReader(MySqlDataReader _reader)
		{
			m_id = _reader["id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("id") : 0;
			mc_id = false;
			m_temperature = _reader["temperature"].GetType() != typeof(System.DBNull) ? _reader.GetString("temperature") : "";
			mc_temperature = false;
			m_sky = _reader["sky"].GetType() != typeof(System.DBNull) ? _reader.GetString("sky") : "";
			mc_sky = false;
			m_sky_icon = _reader["sky_icon"].GetType() != typeof(System.DBNull) ? _reader.GetString("sky_icon") : "";
			mc_sky_icon = false;
			m_eur_price = _reader["eur_price"].GetType() != typeof(System.DBNull) ? _reader.GetDecimal("eur_price") : new Decimal();
			mc_eur_price = false;
			m_eur_change = _reader["eur_change"].GetType() != typeof(System.DBNull) ? _reader.GetDecimal("eur_change") : new Decimal();
			mc_eur_change = false;
			m_usd_price = _reader["usd_price"].GetType() != typeof(System.DBNull) ? _reader.GetDecimal("usd_price") : new Decimal();
			mc_usd_price = false;
			m_usd_change = _reader["usd_change"].GetType() != typeof(System.DBNull) ? _reader.GetDecimal("usd_change") : new Decimal();
			mc_usd_change = false;
			m_jams_degree = _reader["jams_degree"].GetType() != typeof(System.DBNull) ? _reader.GetInt32("jams_degree") : 0;
			mc_jams_degree = false;
			m_jams_description = _reader["jams_description"].GetType() != typeof(System.DBNull) ? _reader.GetString("jams_description") : "";
			mc_jams_description = false;
			m_sky_icon_morning = _reader["sky_icon_morning"].GetType() != typeof(System.DBNull) ? _reader.GetString("sky_icon_morning") : "";
			mc_sky_icon_morning = false;
			m_sky_icon_afternoon = _reader["sky_icon_afternoon"].GetType() != typeof(System.DBNull) ? _reader.GetString("sky_icon_afternoon") : "";
			mc_sky_icon_afternoon = false;
			m_sky_icon_evening = _reader["sky_icon_evening"].GetType() != typeof(System.DBNull) ? _reader.GetString("sky_icon_evening") : "";
			mc_sky_icon_evening = false;
			m_sky_morning = _reader["sky_morning"].GetType() != typeof(System.DBNull) ? _reader.GetString("sky_morning") : "";
			mc_sky_morning = false;
			m_sky_afternoon = _reader["sky_afternoon"].GetType() != typeof(System.DBNull) ? _reader.GetString("sky_afternoon") : "";
			mc_sky_afternoon = false;
			m_sky_evening = _reader["sky_evening"].GetType() != typeof(System.DBNull) ? _reader.GetString("sky_evening") : "";
			mc_sky_evening = false;
			m_temperature_morning = _reader["temperature_morning"].GetType() != typeof(System.DBNull) ? _reader.GetString("temperature_morning") : "";
			mc_temperature_morning = false;
			m_temperature_afternoon = _reader["temperature_afternoon"].GetType() != typeof(System.DBNull) ? _reader.GetString("temperature_afternoon") : "";
			mc_temperature_afternoon = false;
			m_temperature_evening = _reader["temperature_evening"].GetType() != typeof(System.DBNull) ? _reader.GetString("temperature_evening") : "";
			mc_temperature_evening = false;
		}
		public void LoadAggregations(Meridian _meridian)
		{
		}
		public void DeleteAggregations()
		{
		}
		public void LoadCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public void SaveCompositions(Meridian _meridian)
		{
		}
		public void DeleteCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public string ProtoName
		{
			get { return "main_page_widgets"; }
		}
		/* metafile template 
		internal class main_page_widgets_meta
		{
			public long id { get; set; }
			public string temperature { get; set; }
			public string sky { get; set; }
			public string sky_icon { get; set; }
			public System.Decimal eur_price { get; set; }
			public System.Decimal eur_change { get; set; }
			public System.Decimal usd_price { get; set; }
			public System.Decimal usd_change { get; set; }
			public int jams_degree { get; set; }
			public string jams_description { get; set; }
			public string sky_icon_morning { get; set; }
			public string sky_icon_afternoon { get; set; }
			public string sky_icon_evening { get; set; }
			public string sky_morning { get; set; }
			public string sky_afternoon { get; set; }
			public string sky_evening { get; set; }
			public string temperature_morning { get; set; }
			public string temperature_afternoon { get; set; }
			public string temperature_evening { get; set; }
		}
		 metafile template */
		public long id
		{
			get
			{
				return m_id;
			}
			set
			{
				if(m_id != value)
				{
					m_id = value != null ? value : 0;
					mc_id = true;
					// call update worker thread;
				}
			}
		}
		public string temperature
		{
			get
			{
				return m_temperature;
			}
			set
			{
				if(m_temperature != value)
				{
					m_temperature = value != null ? value : "";
					mc_temperature = true;
					// call update worker thread;
				}
			}
		}
		public string sky
		{
			get
			{
				return m_sky;
			}
			set
			{
				if(m_sky != value)
				{
					m_sky = value != null ? value : "";
					mc_sky = true;
					// call update worker thread;
				}
			}
		}
		public string sky_icon
		{
			get
			{
				return m_sky_icon;
			}
			set
			{
				if(m_sky_icon != value)
				{
					m_sky_icon = value != null ? value : "";
					mc_sky_icon = true;
					// call update worker thread;
				}
			}
		}
		public System.Decimal eur_price
		{
			get
			{
				return m_eur_price;
			}
			set
			{
				if(m_eur_price != value)
				{
					m_eur_price = value != null ? value : new Decimal();
					mc_eur_price = true;
					// call update worker thread;
				}
			}
		}
		public System.Decimal eur_change
		{
			get
			{
				return m_eur_change;
			}
			set
			{
				if(m_eur_change != value)
				{
					m_eur_change = value != null ? value : new Decimal();
					mc_eur_change = true;
					// call update worker thread;
				}
			}
		}
		public System.Decimal usd_price
		{
			get
			{
				return m_usd_price;
			}
			set
			{
				if(m_usd_price != value)
				{
					m_usd_price = value != null ? value : new Decimal();
					mc_usd_price = true;
					// call update worker thread;
				}
			}
		}
		public System.Decimal usd_change
		{
			get
			{
				return m_usd_change;
			}
			set
			{
				if(m_usd_change != value)
				{
					m_usd_change = value != null ? value : new Decimal();
					mc_usd_change = true;
					// call update worker thread;
				}
			}
		}
		public int jams_degree
		{
			get
			{
				return m_jams_degree;
			}
			set
			{
				if(m_jams_degree != value)
				{
					m_jams_degree = value != null ? value : 0;
					mc_jams_degree = true;
					// call update worker thread;
				}
			}
		}
		public string jams_description
		{
			get
			{
				return m_jams_description;
			}
			set
			{
				if(m_jams_description != value)
				{
					m_jams_description = value != null ? value : "";
					mc_jams_description = true;
					// call update worker thread;
				}
			}
		}
		public string sky_icon_morning
		{
			get
			{
				return m_sky_icon_morning;
			}
			set
			{
				if(m_sky_icon_morning != value)
				{
					m_sky_icon_morning = value != null ? value : "";
					mc_sky_icon_morning = true;
					// call update worker thread;
				}
			}
		}
		public string sky_icon_afternoon
		{
			get
			{
				return m_sky_icon_afternoon;
			}
			set
			{
				if(m_sky_icon_afternoon != value)
				{
					m_sky_icon_afternoon = value != null ? value : "";
					mc_sky_icon_afternoon = true;
					// call update worker thread;
				}
			}
		}
		public string sky_icon_evening
		{
			get
			{
				return m_sky_icon_evening;
			}
			set
			{
				if(m_sky_icon_evening != value)
				{
					m_sky_icon_evening = value != null ? value : "";
					mc_sky_icon_evening = true;
					// call update worker thread;
				}
			}
		}
		public string sky_morning
		{
			get
			{
				return m_sky_morning;
			}
			set
			{
				if(m_sky_morning != value)
				{
					m_sky_morning = value != null ? value : "";
					mc_sky_morning = true;
					// call update worker thread;
				}
			}
		}
		public string sky_afternoon
		{
			get
			{
				return m_sky_afternoon;
			}
			set
			{
				if(m_sky_afternoon != value)
				{
					m_sky_afternoon = value != null ? value : "";
					mc_sky_afternoon = true;
					// call update worker thread;
				}
			}
		}
		public string sky_evening
		{
			get
			{
				return m_sky_evening;
			}
			set
			{
				if(m_sky_evening != value)
				{
					m_sky_evening = value != null ? value : "";
					mc_sky_evening = true;
					// call update worker thread;
				}
			}
		}
		public string temperature_morning
		{
			get
			{
				return m_temperature_morning;
			}
			set
			{
				if(m_temperature_morning != value)
				{
					m_temperature_morning = value != null ? value : "";
					mc_temperature_morning = true;
					// call update worker thread;
				}
			}
		}
		public string temperature_afternoon
		{
			get
			{
				return m_temperature_afternoon;
			}
			set
			{
				if(m_temperature_afternoon != value)
				{
					m_temperature_afternoon = value != null ? value : "";
					mc_temperature_afternoon = true;
					// call update worker thread;
				}
			}
		}
		public string temperature_evening
		{
			get
			{
				return m_temperature_evening;
			}
			set
			{
				if(m_temperature_evening != value)
				{
					m_temperature_evening = value != null ? value : "";
					mc_temperature_evening = true;
					// call update worker thread;
				}
			}
		}
	}
}
