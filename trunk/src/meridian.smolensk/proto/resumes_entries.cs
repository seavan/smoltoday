/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Script.Serialization;
using MySql.Data.MySqlClient;
using meridian.smolensk;
using meridian.smolensk.system;

namespace meridian.smolensk.proto
{
	[MetadataType(typeof(resumes_entries_meta))]	public partial class resumes_entries : admin.db.IDatabaseEntity
	{
		public resumes_entries()
		{
		}
		private long m_id = 0;
		internal bool mc_id { get; private set; }
		private long m_resume_id = 0;
		internal bool mc_resume_id { get; private set; }
		private long m_resume_entry_id = 0;
		internal bool mc_resume_entry_id { get; private set; }
		public void LoadFromReader(MySqlDataReader _reader)
		{
			m_id = _reader["id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("id") : 0;
			mc_id = false;
			m_resume_id = _reader["resume_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("resume_id") : 0;
			mc_resume_id = false;
			m_resume_entry_id = _reader["resume_entry_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("resume_entry_id") : 0;
			mc_resume_entry_id = false;
		}
		public void LoadAggregations(Meridian _meridian)
		{
			if((resume_id > 0) && (_meridian.resumesStore.Exists(resume_id)))
			{
				this.resume_entries_resumes = _meridian.resumesStore.Get(resume_id);;
				this.resume_entries_resumes.AddEntries(this);
			}
			if((resume_entry_id > 0) && (_meridian.vacancy_entriesStore.Exists(resume_entry_id)))
			{
				this.va_en_resumes_vacancy_entries = _meridian.vacancy_entriesStore.Get(resume_entry_id);;
				this.va_en_resumes_vacancy_entries.AddResumes(this);
			}
		}
		public void DeleteAggregations()
		{
			if(this.resume_entries_resumes != null)
			{
				this.resume_entries_resumes.RemoveEntries(this);
			}
			if(this.va_en_resumes_vacancy_entries != null)
			{
				this.va_en_resumes_vacancy_entries.RemoveResumes(this);
			}
		}
		public void LoadCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public void SaveCompositions(Meridian _meridian)
		{
		}
		public void DeleteCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public string ProtoName
		{
			get { return "resumes_entries"; }
		}
		/* metafile template 
		internal class resumes_entries_meta
		{
			public long id { get; set; }
			public long resume_id { get; set; }
			public long resume_entry_id { get; set; }
		}
		 metafile template */
		public long id
		{
			get
			{
				return m_id;
			}
			set
			{
				if(m_id != value)
				{
					m_id = value != null ? value : 0;
					mc_id = true;
					// call update worker thread;
				}
			}
		}
		public long resume_id
		{
			get
			{
				return m_resume_id;
			}
			set
			{
				if(m_resume_id != value)
				{
					m_resume_id = value != null ? value : 0;
					mc_resume_id = true;
					// call update worker thread;
				}
			}
		}
		public long resume_entry_id
		{
			get
			{
				return m_resume_entry_id;
			}
			set
			{
				if(m_resume_entry_id != value)
				{
					m_resume_entry_id = value != null ? value : 0;
					mc_resume_entry_id = true;
					// call update worker thread;
				}
			}
		}
		private resumes resume_entries_resumes
		{
			get; set; 
		}
		public resumes GetEntriesResume()
		{
			return resume_entries_resumes ;
		}
		private vacancy_entries va_en_resumes_vacancy_entries
		{
			get; set; 
		}
		public vacancy_entries GetResumesVacancy_entrie()
		{
			return va_en_resumes_vacancy_entries ;
		}
	}
}
