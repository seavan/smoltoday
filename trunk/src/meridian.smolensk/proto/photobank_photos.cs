/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Script.Serialization;
using MySql.Data.MySqlClient;
using meridian.smolensk;
using meridian.smolensk.system;

namespace meridian.smolensk.proto
{
	[MetadataType(typeof(photobank_photos_meta))]	public partial class photobank_photos : admin.db.IDatabaseEntity
	{
		public photobank_photos()
		{
			tl_photobank_photos = new List<photobank_photo_tags>();
			pb_photos = new List<photobank_related_photos>();
		}
		private long m_id = 0;
		internal bool mc_id { get; private set; }
		private long m_category_id = 0;
		internal bool mc_category_id { get; private set; }
		private long m_account_id = 0;
		internal bool mc_account_id { get; private set; }
		private string m_title = "";
		internal bool mc_title { get; private set; }
		private string m_description = "";
		internal bool mc_description { get; private set; }
		private string m_preview = "";
		internal bool mc_preview { get; private set; }
		private string m_preview_square = "";
		internal bool mc_preview_square { get; private set; }
		private int m_view_count = 0;
		internal bool mc_view_count { get; private set; }
		private int m_download_count = 0;
		internal bool mc_download_count { get; private set; }
		private DateTime m_publish_date = DateTime.MinValue;
		internal bool mc_publish_date { get; private set; }
		private int m_rating = 0;
		internal bool mc_rating { get; private set; }
		private long m_album_id = 0;
		internal bool mc_album_id { get; private set; }
		private bool m_is_main = false;
		internal bool mc_is_main { get; private set; }
		private bool m_day_photo = false;
		internal bool mc_day_photo { get; private set; }
		private string m_preview_main = "";
		internal bool mc_preview_main { get; private set; }
		public ILookupValueAspect GetLookupValueAspect(string _fieldName)
		{
			switch (_fieldName)
			{
				case "album_id": return Getalbum_idLookupValueAspect(); break;
				case "category_id": return Getcategory_idLookupValueAspect(); break;
				default: throw new SystemException("Aspect LookupValue not found in photobank_photos");
			}
		}
		public void LoadFromReader(MySqlDataReader _reader)
		{
			m_id = _reader["id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("id") : 0;
			mc_id = false;
			m_category_id = _reader["category_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("category_id") : 0;
			mc_category_id = false;
			m_account_id = _reader["account_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("account_id") : 0;
			mc_account_id = false;
			m_title = _reader["title"].GetType() != typeof(System.DBNull) ? _reader.GetString("title") : "";
			mc_title = false;
			m_description = _reader["description"].GetType() != typeof(System.DBNull) ? _reader.GetString("description") : "";
			mc_description = false;
			m_preview = _reader["preview"].GetType() != typeof(System.DBNull) ? _reader.GetString("preview") : "";
			mc_preview = false;
			m_preview_square = _reader["preview_square"].GetType() != typeof(System.DBNull) ? _reader.GetString("preview_square") : "";
			mc_preview_square = false;
			m_view_count = _reader["view_count"].GetType() != typeof(System.DBNull) ? _reader.GetInt32("view_count") : 0;
			mc_view_count = false;
			m_download_count = _reader["download_count"].GetType() != typeof(System.DBNull) ? _reader.GetInt32("download_count") : 0;
			mc_download_count = false;
			m_publish_date = _reader["publish_date"].GetType() != typeof(System.DBNull) ? _reader.GetDateTime("publish_date") : DateTime.MinValue;
			mc_publish_date = false;
			m_rating = _reader["rating"].GetType() != typeof(System.DBNull) ? _reader.GetInt32("rating") : 0;
			mc_rating = false;
			m_album_id = _reader["album_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("album_id") : 0;
			mc_album_id = false;
			m_is_main = _reader["is_main"].GetType() != typeof(System.DBNull) ? _reader.GetBoolean("is_main") : false;
			mc_is_main = false;
			m_day_photo = _reader["day_photo"].GetType() != typeof(System.DBNull) ? _reader.GetBoolean("day_photo") : false;
			mc_day_photo = false;
			m_preview_main = _reader["preview_main"].GetType() != typeof(System.DBNull) ? _reader.GetString("preview_main") : "";
			mc_preview_main = false;
		}
		public void LoadAggregations(Meridian _meridian)
		{
		}
		public void DeleteAggregations()
		{
		}
		public void LoadCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public void SaveCompositions(Meridian _meridian)
		{
		}
		public void DeleteCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public string ProtoName
		{
			get { return "photobank_photos"; }
		}
		/* metafile template 
		internal class photobank_photos_meta
		{
			public long id { get; set; }
			public long category_id { get; set; }
			public long account_id { get; set; }
			public string title { get; set; }
			public string description { get; set; }
			public string preview { get; set; }
			public string preview_square { get; set; }
			public int view_count { get; set; }
			public int download_count { get; set; }
			public DateTime publish_date { get; set; }
			public int rating { get; set; }
			public long album_id { get; set; }
			public bool is_main { get; set; }
			public bool day_photo { get; set; }
			public string preview_main { get; set; }
		}
		 metafile template */
		public long id
		{
			get
			{
				return m_id;
			}
			set
			{
				if(m_id != value)
				{
					m_id = value != null ? value : 0;
					mc_id = true;
					// call update worker thread;
				}
			}
		}
		public long category_id
		{
			get
			{
				return m_category_id;
			}
			set
			{
				if(m_category_id != value)
				{
					m_category_id = value != null ? value : 0;
					mc_category_id = true;
					// call update worker thread;
				}
			}
		}
		public long account_id
		{
			get
			{
				return m_account_id;
			}
			set
			{
				if(m_account_id != value)
				{
					m_account_id = value != null ? value : 0;
					mc_account_id = true;
					// call update worker thread;
				}
			}
		}
		public string title
		{
			get
			{
				return m_title;
			}
			set
			{
				if(m_title != value)
				{
					m_title = value != null ? value : "";
					mc_title = true;
					// call update worker thread;
				}
			}
		}
		public string description
		{
			get
			{
				return m_description;
			}
			set
			{
				if(m_description != value)
				{
					m_description = value != null ? value : "";
					mc_description = true;
					// call update worker thread;
				}
			}
		}
		public string preview
		{
			get
			{
				return m_preview;
			}
			set
			{
				if(m_preview != value)
				{
					m_preview = value != null ? value : "";
					mc_preview = true;
					// call update worker thread;
				}
			}
		}
		public string preview_square
		{
			get
			{
				return m_preview_square;
			}
			set
			{
				if(m_preview_square != value)
				{
					m_preview_square = value != null ? value : "";
					mc_preview_square = true;
					// call update worker thread;
				}
			}
		}
		public int view_count
		{
			get
			{
				return m_view_count;
			}
			set
			{
				if(m_view_count != value)
				{
					m_view_count = value != null ? value : 0;
					mc_view_count = true;
					// call update worker thread;
				}
			}
		}
		public int download_count
		{
			get
			{
				return m_download_count;
			}
			set
			{
				if(m_download_count != value)
				{
					m_download_count = value != null ? value : 0;
					mc_download_count = true;
					// call update worker thread;
				}
			}
		}
		public DateTime publish_date
		{
			get
			{
				return m_publish_date;
			}
			set
			{
				if(m_publish_date != value)
				{
					m_publish_date = value != null ? value : DateTime.MinValue;
					if(m_publish_date.Year < 1800) value = DateTime.MinValue;
					mc_publish_date = true;
					// call update worker thread;
				}
			}
		}
		public int rating
		{
			get
			{
				return m_rating;
			}
			set
			{
				if(m_rating != value)
				{
					m_rating = value != null ? value : 0;
					mc_rating = true;
					// call update worker thread;
				}
			}
		}
		public long album_id
		{
			get
			{
				return m_album_id;
			}
			set
			{
				if(m_album_id != value)
				{
					m_album_id = value != null ? value : 0;
					mc_album_id = true;
					// call update worker thread;
				}
			}
		}
		public bool is_main
		{
			get
			{
				return m_is_main;
			}
			set
			{
				if(m_is_main != value)
				{
					m_is_main = value != null ? value : false;
					mc_is_main = true;
					// call update worker thread;
				}
			}
		}
		public bool day_photo
		{
			get
			{
				return m_day_photo;
			}
			set
			{
				if(m_day_photo != value)
				{
					m_day_photo = value != null ? value : false;
					mc_day_photo = true;
					// call update worker thread;
				}
			}
		}
		public string preview_main
		{
			get
			{
				return m_preview_main;
			}
			set
			{
				if(m_preview_main != value)
				{
					m_preview_main = value != null ? value : "";
					mc_preview_main = true;
					// call update worker thread;
				}
			}
		}
		private List<photobank_photo_tags> tl_photobank_photos
		{
			get; set; 
		}
		[ScriptIgnore]
		public IEnumerable<photobank_photo_tags> PhotoTags
		{
			get { return tl_photobank_photos; }
		}
		public IEnumerable<photobank_photo_tags> GetPhotoTags()
		{
			return tl_photobank_photos;
		}
		public photobank_photo_tags AddPhotoTags(photobank_photo_tags _item, bool _insertToStore = false)
		{
			if(tl_photobank_photos.IndexOf(_item) != -1) return _item;
			tl_photobank_photos.Add(_item);
			_item.photo_id = id;
			if(_insertToStore && !Meridian.Default.photobank_photo_tagsStore.Exists(_item.id))
			{
				Meridian.Default.photobank_photo_tagsStore.Insert(_item);
				_item.LoadAggregations(Meridian.Default);
			}
			return _item;
		}
		public photobank_photo_tags RemovePhotoTags(photobank_photo_tags _item, bool _complete = false)
		{
			tl_photobank_photos.Remove(_item);
			if(_complete) Meridian.Default.photobank_photo_tagsStore.Delete(_item);
			return _item;
		}
		private List<photobank_related_photos> pb_photos
		{
			get; set; 
		}
		[ScriptIgnore]
		public IEnumerable<photobank_related_photos> Photos
		{
			get { return pb_photos; }
		}
		public IEnumerable<photobank_related_photos> GetPhotos()
		{
			return pb_photos;
		}
		public photobank_related_photos AddPhotos(photobank_related_photos _item, bool _insertToStore = false)
		{
			if(pb_photos.IndexOf(_item) != -1) return _item;
			pb_photos.Add(_item);
			_item.photo_id = id;
			if(_insertToStore && !Meridian.Default.photobank_related_photosStore.Exists(_item.id))
			{
				Meridian.Default.photobank_related_photosStore.Insert(_item);
				_item.LoadAggregations(Meridian.Default);
			}
			return _item;
		}
		public photobank_related_photos RemovePhotos(photobank_related_photos _item, bool _complete = false)
		{
			pb_photos.Remove(_item);
			if(_complete) Meridian.Default.photobank_related_photosStore.Delete(_item);
			return _item;
		}
	}
}
