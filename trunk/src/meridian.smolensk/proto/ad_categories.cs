/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Script.Serialization;
using MySql.Data.MySqlClient;
using meridian.smolensk;
using meridian.smolensk.system;

namespace meridian.smolensk.proto
{
	[MetadataType(typeof(ad_categories_meta))]	public partial class ad_categories : admin.db.IDatabaseEntity
	{
		public ad_categories()
		{
			adverts_subcategories = new List<ad_categories>();
			adverts_category_descriptions = new List<ad_field_descriptions>();
			adverts_category_advertisments = new List<ad_advertisments>();
		}
		private long m_id = 0;
		internal bool mc_id { get; private set; }
		private string m_title = "";
		internal bool mc_title { get; private set; }
		private long m_parent_id = 0;
		internal bool mc_parent_id { get; private set; }
		public void LoadFromReader(MySqlDataReader _reader)
		{
			m_id = _reader["id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("id") : 0;
			mc_id = false;
			m_title = _reader["title"].GetType() != typeof(System.DBNull) ? _reader.GetString("title") : "";
			mc_title = false;
			m_parent_id = _reader["parent_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("parent_id") : 0;
			mc_parent_id = false;
		}
		public void LoadAggregations(Meridian _meridian)
		{
			if((parent_id > 0) && (_meridian.ad_categoriesStore.Exists(parent_id)))
			{
				this.adverts_subcategories_ad_categories = _meridian.ad_categoriesStore.Get(parent_id);;
				this.adverts_subcategories_ad_categories.AddSubcategories(this);
			}
		}
		public void DeleteAggregations()
		{
			if(this.adverts_subcategories_ad_categories != null)
			{
				this.adverts_subcategories_ad_categories.RemoveSubcategories(this);
			}
		}
		public void LoadCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public void SaveCompositions(Meridian _meridian)
		{
		}
		public void DeleteCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public string ProtoName
		{
			get { return "ad_categories"; }
		}
		/* metafile template 
		internal class ad_categories_meta
		{
			public long id { get; set; }
			public string title { get; set; }
			public long parent_id { get; set; }
		}
		 metafile template */
		public long id
		{
			get
			{
				return m_id;
			}
			set
			{
				if(m_id != value)
				{
					m_id = value != null ? value : 0;
					mc_id = true;
					// call update worker thread;
				}
			}
		}
		public string title
		{
			get
			{
				return m_title;
			}
			set
			{
				if(m_title != value)
				{
					m_title = value != null ? value : "";
					mc_title = true;
					// call update worker thread;
				}
			}
		}
		public long parent_id
		{
			get
			{
				return m_parent_id;
			}
			set
			{
				if(m_parent_id != value)
				{
					m_parent_id = value != null ? value : 0;
					mc_parent_id = true;
					// call update worker thread;
				}
			}
		}
		private List<ad_categories> adverts_subcategories
		{
			get; set; 
		}
		[ScriptIgnore]
		public IEnumerable<ad_categories> Subcategories
		{
			get { return adverts_subcategories; }
		}
		public IEnumerable<ad_categories> GetSubcategories()
		{
			return adverts_subcategories;
		}
		public ad_categories AddSubcategories(ad_categories _item, bool _insertToStore = false)
		{
			if(adverts_subcategories.IndexOf(_item) != -1) return _item;
			adverts_subcategories.Add(_item);
			_item.parent_id = id;
			if(_insertToStore && !Meridian.Default.ad_categoriesStore.Exists(_item.id))
			{
				Meridian.Default.ad_categoriesStore.Insert(_item);
				_item.LoadAggregations(Meridian.Default);
			}
			return _item;
		}
		public ad_categories RemoveSubcategories(ad_categories _item, bool _complete = false)
		{
			adverts_subcategories.Remove(_item);
			if(_complete) Meridian.Default.ad_categoriesStore.Delete(_item);
			return _item;
		}
		private List<ad_field_descriptions> adverts_category_descriptions
		{
			get; set; 
		}
		[ScriptIgnore]
		public IEnumerable<ad_field_descriptions> Descriptions
		{
			get { return adverts_category_descriptions; }
		}
		public IEnumerable<ad_field_descriptions> GetDescriptions()
		{
			return adverts_category_descriptions;
		}
		public ad_field_descriptions AddDescriptions(ad_field_descriptions _item, bool _insertToStore = false)
		{
			if(adverts_category_descriptions.IndexOf(_item) != -1) return _item;
			adverts_category_descriptions.Add(_item);
			_item.ad_category_id = id;
			if(_insertToStore && !Meridian.Default.ad_field_descriptionsStore.Exists(_item.id))
			{
				Meridian.Default.ad_field_descriptionsStore.Insert(_item);
				_item.LoadAggregations(Meridian.Default);
			}
			return _item;
		}
		public ad_field_descriptions RemoveDescriptions(ad_field_descriptions _item, bool _complete = false)
		{
			adverts_category_descriptions.Remove(_item);
			if(_complete) Meridian.Default.ad_field_descriptionsStore.Delete(_item);
			return _item;
		}
		private List<ad_advertisments> adverts_category_advertisments
		{
			get; set; 
		}
		[ScriptIgnore]
		public IEnumerable<ad_advertisments> Advertisments
		{
			get { return adverts_category_advertisments; }
		}
		public IEnumerable<ad_advertisments> GetAdvertisments()
		{
			return adverts_category_advertisments;
		}
		public ad_advertisments AddAdvertisments(ad_advertisments _item, bool _insertToStore = false)
		{
			if(adverts_category_advertisments.IndexOf(_item) != -1) return _item;
			adverts_category_advertisments.Add(_item);
			_item.category_id = id;
			if(_insertToStore && !Meridian.Default.ad_advertismentsStore.Exists(_item.id))
			{
				Meridian.Default.ad_advertismentsStore.Insert(_item);
				_item.LoadAggregations(Meridian.Default);
			}
			return _item;
		}
		public ad_advertisments RemoveAdvertisments(ad_advertisments _item, bool _complete = false)
		{
			adverts_category_advertisments.Remove(_item);
			if(_complete) Meridian.Default.ad_advertismentsStore.Delete(_item);
			return _item;
		}
		private ad_categories adverts_subcategories_ad_categories
		{
			get; set; 
		}
		public ad_categories GetSubcategoriesAd_categorie()
		{
			return adverts_subcategories_ad_categories ;
		}
	}
}
