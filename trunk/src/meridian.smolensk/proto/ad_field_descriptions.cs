/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Script.Serialization;
using MySql.Data.MySqlClient;
using meridian.smolensk;
using meridian.smolensk.system;

namespace meridian.smolensk.proto
{
	[MetadataType(typeof(ad_field_descriptions_meta))]	public partial class ad_field_descriptions : admin.db.IDatabaseEntity
	{
		public ad_field_descriptions()
		{
			ad_description = new List<ad_lookup_values>();
		}
		private long m_id = 0;
		internal bool mc_id { get; private set; }
		private string m_title = "";
		internal bool mc_title { get; private set; }
		private long m_ad_category_id = 0;
		internal bool mc_ad_category_id { get; private set; }
		private bool m_is_multiple = false;
		internal bool mc_is_multiple { get; private set; }
		private bool m_is_anyvalue = false;
		internal bool mc_is_anyvalue { get; private set; }
		public void LoadFromReader(MySqlDataReader _reader)
		{
			m_id = _reader["id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("id") : 0;
			mc_id = false;
			m_title = _reader["title"].GetType() != typeof(System.DBNull) ? _reader.GetString("title") : "";
			mc_title = false;
			m_ad_category_id = _reader["ad_category_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("ad_category_id") : 0;
			mc_ad_category_id = false;
			m_is_multiple = _reader["is_multiple"].GetType() != typeof(System.DBNull) ? _reader.GetBoolean("is_multiple") : false;
			mc_is_multiple = false;
			m_is_anyvalue = _reader["is_anyvalue"].GetType() != typeof(System.DBNull) ? _reader.GetBoolean("is_anyvalue") : false;
			mc_is_anyvalue = false;
		}
		public void LoadAggregations(Meridian _meridian)
		{
			if((ad_category_id > 0) && (_meridian.ad_categoriesStore.Exists(ad_category_id)))
			{
				this.adverts_category_descriptions_ad_categories = _meridian.ad_categoriesStore.Get(ad_category_id);;
				this.adverts_category_descriptions_ad_categories.AddDescriptions(this);
			}
		}
		public void DeleteAggregations()
		{
			if(this.adverts_category_descriptions_ad_categories != null)
			{
				this.adverts_category_descriptions_ad_categories.RemoveDescriptions(this);
			}
		}
		public void LoadCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public void SaveCompositions(Meridian _meridian)
		{
		}
		public void DeleteCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public string ProtoName
		{
			get { return "ad_field_descriptions"; }
		}
		/* metafile template 
		internal class ad_field_descriptions_meta
		{
			public long id { get; set; }
			public string title { get; set; }
			public long ad_category_id { get; set; }
			public bool is_multiple { get; set; }
			public bool is_anyvalue { get; set; }
		}
		 metafile template */
		public long id
		{
			get
			{
				return m_id;
			}
			set
			{
				if(m_id != value)
				{
					m_id = value != null ? value : 0;
					mc_id = true;
					// call update worker thread;
				}
			}
		}
		public string title
		{
			get
			{
				return m_title;
			}
			set
			{
				if(m_title != value)
				{
					m_title = value != null ? value : "";
					mc_title = true;
					// call update worker thread;
				}
			}
		}
		public long ad_category_id
		{
			get
			{
				return m_ad_category_id;
			}
			set
			{
				if(m_ad_category_id != value)
				{
					m_ad_category_id = value != null ? value : 0;
					mc_ad_category_id = true;
					// call update worker thread;
				}
			}
		}
		public bool is_multiple
		{
			get
			{
				return m_is_multiple;
			}
			set
			{
				if(m_is_multiple != value)
				{
					m_is_multiple = value != null ? value : false;
					mc_is_multiple = true;
					// call update worker thread;
				}
			}
		}
		public bool is_anyvalue
		{
			get
			{
				return m_is_anyvalue;
			}
			set
			{
				if(m_is_anyvalue != value)
				{
					m_is_anyvalue = value != null ? value : false;
					mc_is_anyvalue = true;
					// call update worker thread;
				}
			}
		}
		private List<ad_lookup_values> ad_description
		{
			get; set; 
		}
		[ScriptIgnore]
		public IEnumerable<ad_lookup_values> Descriptions
		{
			get { return ad_description; }
		}
		public IEnumerable<ad_lookup_values> GetDescriptions()
		{
			return ad_description;
		}
		public ad_lookup_values AddDescriptions(ad_lookup_values _item, bool _insertToStore = false)
		{
			if(ad_description.IndexOf(_item) != -1) return _item;
			ad_description.Add(_item);
			_item.description_id = id;
			if(_insertToStore && !Meridian.Default.ad_lookup_valuesStore.Exists(_item.id))
			{
				Meridian.Default.ad_lookup_valuesStore.Insert(_item);
				_item.LoadAggregations(Meridian.Default);
			}
			return _item;
		}
		public ad_lookup_values RemoveDescriptions(ad_lookup_values _item, bool _complete = false)
		{
			ad_description.Remove(_item);
			if(_complete) Meridian.Default.ad_lookup_valuesStore.Delete(_item);
			return _item;
		}
		private ad_categories adverts_category_descriptions_ad_categories
		{
			get; set; 
		}
		public ad_categories GetDescriptionsAd_categorie()
		{
			return adverts_category_descriptions_ad_categories ;
		}
	}
}
