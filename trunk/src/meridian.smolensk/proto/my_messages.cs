/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Script.Serialization;
using MySql.Data.MySqlClient;
using meridian.smolensk;
using meridian.smolensk.system;

namespace meridian.smolensk.proto
{
	[MetadataType(typeof(my_messages_meta))]	public partial class my_messages : admin.db.IDatabaseEntity
	{
		public my_messages()
		{
		}
		private long m_id = 0;
		internal bool mc_id { get; private set; }
		private string m_title = "";
		internal bool mc_title { get; private set; }
		private string m_text = "";
		internal bool mc_text { get; private set; }
		private string m_link = "";
		internal bool mc_link { get; private set; }
		private string m_link_name = "";
		internal bool mc_link_name { get; private set; }
		private DateTime m_create_date = DateTime.MinValue;
		internal bool mc_create_date { get; private set; }
		private bool m_is_new = false;
		internal bool mc_is_new { get; private set; }
		private long m_account_id = 0;
		internal bool mc_account_id { get; private set; }
		public void LoadFromReader(MySqlDataReader _reader)
		{
			m_id = _reader["id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("id") : 0;
			mc_id = false;
			m_title = _reader["title"].GetType() != typeof(System.DBNull) ? _reader.GetString("title") : "";
			mc_title = false;
			m_text = _reader["text"].GetType() != typeof(System.DBNull) ? _reader.GetString("text") : "";
			mc_text = false;
			m_link = _reader["link"].GetType() != typeof(System.DBNull) ? _reader.GetString("link") : "";
			mc_link = false;
			m_link_name = _reader["link_name"].GetType() != typeof(System.DBNull) ? _reader.GetString("link_name") : "";
			mc_link_name = false;
			m_create_date = _reader["create_date"].GetType() != typeof(System.DBNull) ? _reader.GetDateTime("create_date") : DateTime.MinValue;
			mc_create_date = false;
			m_is_new = _reader["is_new"].GetType() != typeof(System.DBNull) ? _reader.GetBoolean("is_new") : false;
			mc_is_new = false;
			m_account_id = _reader["account_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("account_id") : 0;
			mc_account_id = false;
		}
		public void LoadAggregations(Meridian _meridian)
		{
		}
		public void DeleteAggregations()
		{
		}
		public void LoadCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public void SaveCompositions(Meridian _meridian)
		{
		}
		public void DeleteCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public string ProtoName
		{
			get { return "my_messages"; }
		}
		/* metafile template 
		internal class my_messages_meta
		{
			public long id { get; set; }
			public string title { get; set; }
			public string text { get; set; }
			public string link { get; set; }
			public string link_name { get; set; }
			public DateTime create_date { get; set; }
			public bool is_new { get; set; }
			public long account_id { get; set; }
		}
		 metafile template */
		public long id
		{
			get
			{
				return m_id;
			}
			set
			{
				if(m_id != value)
				{
					m_id = value != null ? value : 0;
					mc_id = true;
					// call update worker thread;
				}
			}
		}
		public string title
		{
			get
			{
				return m_title;
			}
			set
			{
				if(m_title != value)
				{
					m_title = value != null ? value : "";
					mc_title = true;
					// call update worker thread;
				}
			}
		}
		public string text
		{
			get
			{
				return m_text;
			}
			set
			{
				if(m_text != value)
				{
					m_text = value != null ? value : "";
					mc_text = true;
					// call update worker thread;
				}
			}
		}
		public string link
		{
			get
			{
				return m_link;
			}
			set
			{
				if(m_link != value)
				{
					m_link = value != null ? value : "";
					mc_link = true;
					// call update worker thread;
				}
			}
		}
		public string link_name
		{
			get
			{
				return m_link_name;
			}
			set
			{
				if(m_link_name != value)
				{
					m_link_name = value != null ? value : "";
					mc_link_name = true;
					// call update worker thread;
				}
			}
		}
		public DateTime create_date
		{
			get
			{
				return m_create_date;
			}
			set
			{
				if(m_create_date != value)
				{
					m_create_date = value != null ? value : DateTime.MinValue;
					if(m_create_date.Year < 1800) value = DateTime.MinValue;
					mc_create_date = true;
					// call update worker thread;
				}
			}
		}
		public bool is_new
		{
			get
			{
				return m_is_new;
			}
			set
			{
				if(m_is_new != value)
				{
					m_is_new = value != null ? value : false;
					mc_is_new = true;
					// call update worker thread;
				}
			}
		}
		public long account_id
		{
			get
			{
				return m_account_id;
			}
			set
			{
				if(m_account_id != value)
				{
					m_account_id = value != null ? value : 0;
					mc_account_id = true;
					// call update worker thread;
				}
			}
		}
	}
}
