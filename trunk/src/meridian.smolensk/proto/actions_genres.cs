/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Script.Serialization;
using MySql.Data.MySqlClient;
using meridian.smolensk;
using meridian.smolensk.system;

namespace meridian.smolensk.proto
{
	[MetadataType(typeof(actions_genres_meta))]	public partial class actions_genres : admin.db.IDatabaseEntity
	{
		public actions_genres()
		{
		}
		private long m_id = 0;
		internal bool mc_id { get; private set; }
		private long m_action_id = 0;
		internal bool mc_action_id { get; private set; }
		private long m_genre_id = 0;
		internal bool mc_genre_id { get; private set; }
		public void LoadFromReader(MySqlDataReader _reader)
		{
			m_id = _reader["id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("id") : 0;
			mc_id = false;
			m_action_id = _reader["action_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("action_id") : 0;
			mc_action_id = false;
			m_genre_id = _reader["genre_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("genre_id") : 0;
			mc_genre_id = false;
		}
		public void LoadAggregations(Meridian _meridian)
		{
			if((action_id > 0) && (_meridian.actionsStore.Exists(action_id)))
			{
				this.g_actions_actions = _meridian.actionsStore.Get(action_id);;
				this.g_actions_actions.AddActionGenre(this);
			}
			if((genre_id > 0) && (_meridian.genresStore.Exists(genre_id)))
			{
				this.agenres_genre_genres = _meridian.genresStore.Get(genre_id);;
				this.agenres_genre_genres.AddGenre(this);
			}
		}
		public void DeleteAggregations()
		{
			if(this.g_actions_actions != null)
			{
				this.g_actions_actions.RemoveActionGenre(this);
			}
			if(this.agenres_genre_genres != null)
			{
				this.agenres_genre_genres.RemoveGenre(this);
			}
		}
		public void LoadCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public void SaveCompositions(Meridian _meridian)
		{
		}
		public void DeleteCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public string ProtoName
		{
			get { return "actions_genres"; }
		}
		/* metafile template 
		internal class actions_genres_meta
		{
			public long id { get; set; }
			public long action_id { get; set; }
			public long genre_id { get; set; }
		}
		 metafile template */
		public long id
		{
			get
			{
				return m_id;
			}
			set
			{
				if(m_id != value)
				{
					m_id = value != null ? value : 0;
					mc_id = true;
					// call update worker thread;
				}
			}
		}
		public long action_id
		{
			get
			{
				return m_action_id;
			}
			set
			{
				if(m_action_id != value)
				{
					m_action_id = value != null ? value : 0;
					mc_action_id = true;
					// call update worker thread;
				}
			}
		}
		public long genre_id
		{
			get
			{
				return m_genre_id;
			}
			set
			{
				if(m_genre_id != value)
				{
					m_genre_id = value != null ? value : 0;
					mc_genre_id = true;
					// call update worker thread;
				}
			}
		}
		private actions g_actions_actions
		{
			get; set; 
		}
		public actions GetActionGenreAction()
		{
			return g_actions_actions ;
		}
		private genres agenres_genre_genres
		{
			get; set; 
		}
		public genres GetGenreGenre()
		{
			return agenres_genre_genres ;
		}
	}
}
