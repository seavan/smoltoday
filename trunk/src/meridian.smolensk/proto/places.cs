/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Script.Serialization;
using MySql.Data.MySqlClient;
using meridian.smolensk;
using meridian.smolensk.system;

namespace meridian.smolensk.proto
{
	[MetadataType(typeof(places_meta))]	public partial class places : admin.db.IDatabaseEntity
	{
		public places()
		{
			actions_places = new List<actions_places>();
		}
		private long m_id = 0;
		internal bool mc_id { get; private set; }
		private string m_title = "";
		internal bool mc_title { get; private set; }
		private string m_text = "";
		internal bool mc_text { get; private set; }
		private string m_adress = "";
		internal bool mc_adress { get; private set; }
		private string m_price = "";
		internal bool mc_price { get; private set; }
		private string m_work_time = "";
		internal bool mc_work_time { get; private set; }
		private string m_location = "";
		internal bool mc_location { get; private set; }
		private string m_phone = "";
		internal bool mc_phone { get; private set; }
		private string m_site = "";
		internal bool mc_site { get; private set; }
		private string m_google_link = "";
		internal bool mc_google_link { get; private set; }
		private string m_facebook_link = "";
		internal bool mc_facebook_link { get; private set; }
		private string m_twitter_link = "";
		internal bool mc_twitter_link { get; private set; }
		private string m_vk_link = "";
		internal bool mc_vk_link { get; private set; }
		private string m_mail_link = "";
		internal bool mc_mail_link { get; private set; }
		private string m_odnoklassniki_link = "";
		internal bool mc_odnoklassniki_link { get; private set; }
		private string m_coordinates = "";
		internal bool mc_coordinates { get; private set; }
		public void LoadFromReader(MySqlDataReader _reader)
		{
			m_id = _reader["id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("id") : 0;
			mc_id = false;
			m_title = _reader["title"].GetType() != typeof(System.DBNull) ? _reader.GetString("title") : "";
			mc_title = false;
			m_text = _reader["text"].GetType() != typeof(System.DBNull) ? _reader.GetString("text") : "";
			mc_text = false;
			m_adress = _reader["adress"].GetType() != typeof(System.DBNull) ? _reader.GetString("adress") : "";
			mc_adress = false;
			m_price = _reader["price"].GetType() != typeof(System.DBNull) ? _reader.GetString("price") : "";
			mc_price = false;
			m_work_time = _reader["work_time"].GetType() != typeof(System.DBNull) ? _reader.GetString("work_time") : "";
			mc_work_time = false;
			m_location = _reader["location"].GetType() != typeof(System.DBNull) ? _reader.GetString("location") : "";
			mc_location = false;
			m_phone = _reader["phone"].GetType() != typeof(System.DBNull) ? _reader.GetString("phone") : "";
			mc_phone = false;
			m_site = _reader["site"].GetType() != typeof(System.DBNull) ? _reader.GetString("site") : "";
			mc_site = false;
			m_google_link = _reader["google_link"].GetType() != typeof(System.DBNull) ? _reader.GetString("google_link") : "";
			mc_google_link = false;
			m_facebook_link = _reader["facebook_link"].GetType() != typeof(System.DBNull) ? _reader.GetString("facebook_link") : "";
			mc_facebook_link = false;
			m_twitter_link = _reader["twitter_link"].GetType() != typeof(System.DBNull) ? _reader.GetString("twitter_link") : "";
			mc_twitter_link = false;
			m_vk_link = _reader["vk_link"].GetType() != typeof(System.DBNull) ? _reader.GetString("vk_link") : "";
			mc_vk_link = false;
			m_mail_link = _reader["mail_link"].GetType() != typeof(System.DBNull) ? _reader.GetString("mail_link") : "";
			mc_mail_link = false;
			m_odnoklassniki_link = _reader["odnoklassniki_link"].GetType() != typeof(System.DBNull) ? _reader.GetString("odnoklassniki_link") : "";
			mc_odnoklassniki_link = false;
			m_coordinates = _reader["coordinates"].GetType() != typeof(System.DBNull) ? _reader.GetString("coordinates") : "";
			mc_coordinates = false;
		}
		public void LoadAggregations(Meridian _meridian)
		{
		}
		public void DeleteAggregations()
		{
		}
		public void LoadCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public void SaveCompositions(Meridian _meridian)
		{
		}
		public void DeleteCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public string ProtoName
		{
			get { return "places"; }
		}
		/* metafile template 
		internal class places_meta
		{
			public long id { get; set; }
			public string title { get; set; }
			public string text { get; set; }
			public string adress { get; set; }
			public string price { get; set; }
			public string work_time { get; set; }
			public string location { get; set; }
			public string phone { get; set; }
			public string site { get; set; }
			public string google_link { get; set; }
			public string facebook_link { get; set; }
			public string twitter_link { get; set; }
			public string vk_link { get; set; }
			public string mail_link { get; set; }
			public string odnoklassniki_link { get; set; }
			public string coordinates { get; set; }
		}
		 metafile template */
		public long id
		{
			get
			{
				return m_id;
			}
			set
			{
				if(m_id != value)
				{
					m_id = value != null ? value : 0;
					mc_id = true;
					// call update worker thread;
				}
			}
		}
		public string title
		{
			get
			{
				return m_title;
			}
			set
			{
				if(m_title != value)
				{
					m_title = value != null ? value : "";
					mc_title = true;
					// call update worker thread;
				}
			}
		}
		public string text
		{
			get
			{
				return m_text;
			}
			set
			{
				if(m_text != value)
				{
					m_text = value != null ? value : "";
					mc_text = true;
					// call update worker thread;
				}
			}
		}
		public string adress
		{
			get
			{
				return m_adress;
			}
			set
			{
				if(m_adress != value)
				{
					m_adress = value != null ? value : "";
					mc_adress = true;
					// call update worker thread;
				}
			}
		}
		public string price
		{
			get
			{
				return m_price;
			}
			set
			{
				if(m_price != value)
				{
					m_price = value != null ? value : "";
					mc_price = true;
					// call update worker thread;
				}
			}
		}
		public string work_time
		{
			get
			{
				return m_work_time;
			}
			set
			{
				if(m_work_time != value)
				{
					m_work_time = value != null ? value : "";
					mc_work_time = true;
					// call update worker thread;
				}
			}
		}
		public string location
		{
			get
			{
				return m_location;
			}
			set
			{
				if(m_location != value)
				{
					m_location = value != null ? value : "";
					mc_location = true;
					// call update worker thread;
				}
			}
		}
		public string phone
		{
			get
			{
				return m_phone;
			}
			set
			{
				if(m_phone != value)
				{
					m_phone = value != null ? value : "";
					mc_phone = true;
					// call update worker thread;
				}
			}
		}
		public string site
		{
			get
			{
				return m_site;
			}
			set
			{
				if(m_site != value)
				{
					m_site = value != null ? value : "";
					mc_site = true;
					// call update worker thread;
				}
			}
		}
		public string google_link
		{
			get
			{
				return m_google_link;
			}
			set
			{
				if(m_google_link != value)
				{
					m_google_link = value != null ? value : "";
					mc_google_link = true;
					// call update worker thread;
				}
			}
		}
		public string facebook_link
		{
			get
			{
				return m_facebook_link;
			}
			set
			{
				if(m_facebook_link != value)
				{
					m_facebook_link = value != null ? value : "";
					mc_facebook_link = true;
					// call update worker thread;
				}
			}
		}
		public string twitter_link
		{
			get
			{
				return m_twitter_link;
			}
			set
			{
				if(m_twitter_link != value)
				{
					m_twitter_link = value != null ? value : "";
					mc_twitter_link = true;
					// call update worker thread;
				}
			}
		}
		public string vk_link
		{
			get
			{
				return m_vk_link;
			}
			set
			{
				if(m_vk_link != value)
				{
					m_vk_link = value != null ? value : "";
					mc_vk_link = true;
					// call update worker thread;
				}
			}
		}
		public string mail_link
		{
			get
			{
				return m_mail_link;
			}
			set
			{
				if(m_mail_link != value)
				{
					m_mail_link = value != null ? value : "";
					mc_mail_link = true;
					// call update worker thread;
				}
			}
		}
		public string odnoklassniki_link
		{
			get
			{
				return m_odnoklassniki_link;
			}
			set
			{
				if(m_odnoklassniki_link != value)
				{
					m_odnoklassniki_link = value != null ? value : "";
					mc_odnoklassniki_link = true;
					// call update worker thread;
				}
			}
		}
		public string coordinates
		{
			get
			{
				return m_coordinates;
			}
			set
			{
				if(m_coordinates != value)
				{
					m_coordinates = value != null ? value : "";
					mc_coordinates = true;
					// call update worker thread;
				}
			}
		}
		private List<actions_places> actions_places
		{
			get; set; 
		}
		[ScriptIgnore]
		public IEnumerable<actions_places> ActionPlace
		{
			get { return actions_places; }
		}
		public IEnumerable<actions_places> GetActionPlace()
		{
			return actions_places;
		}
		public actions_places AddActionPlace(actions_places _item, bool _insertToStore = false)
		{
			if(actions_places.IndexOf(_item) != -1) return _item;
			actions_places.Add(_item);
			_item.place_id = id;
			if(_insertToStore && !Meridian.Default.actions_placesStore.Exists(_item.id))
			{
				Meridian.Default.actions_placesStore.Insert(_item);
				_item.LoadAggregations(Meridian.Default);
			}
			return _item;
		}
		public actions_places RemoveActionPlace(actions_places _item, bool _complete = false)
		{
			actions_places.Remove(_item);
			if(_complete) Meridian.Default.actions_placesStore.Delete(_item);
			return _item;
		}
	}
}
