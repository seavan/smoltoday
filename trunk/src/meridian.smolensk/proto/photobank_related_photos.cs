/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Script.Serialization;
using MySql.Data.MySqlClient;
using meridian.smolensk;
using meridian.smolensk.system;

namespace meridian.smolensk.proto
{
	[MetadataType(typeof(photobank_related_photos_meta))]	public partial class photobank_related_photos : admin.db.IDatabaseEntity
	{
		public photobank_related_photos()
		{
			pb_prices_photos = new List<photobank_photo_prices>();
		}
		private long m_id = 0;
		internal bool mc_id { get; private set; }
		private long m_photo_id = 0;
		internal bool mc_photo_id { get; private set; }
		private bool m_original = false;
		internal bool mc_original { get; private set; }
		private int m_width = 0;
		internal bool mc_width { get; private set; }
		private int m_height = 0;
		internal bool mc_height { get; private set; }
		private string m_photo = "";
		internal bool mc_photo { get; private set; }
		private string m_filename = "";
		internal bool mc_filename { get; private set; }
		public void LoadFromReader(MySqlDataReader _reader)
		{
			m_id = _reader["id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("id") : 0;
			mc_id = false;
			m_photo_id = _reader["photo_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("photo_id") : 0;
			mc_photo_id = false;
			m_original = _reader["original"].GetType() != typeof(System.DBNull) ? _reader.GetBoolean("original") : false;
			mc_original = false;
			m_width = _reader["width"].GetType() != typeof(System.DBNull) ? _reader.GetInt32("width") : 0;
			mc_width = false;
			m_height = _reader["height"].GetType() != typeof(System.DBNull) ? _reader.GetInt32("height") : 0;
			mc_height = false;
			m_photo = _reader["photo"].GetType() != typeof(System.DBNull) ? _reader.GetString("photo") : "";
			mc_photo = false;
			m_filename = _reader["filename"].GetType() != typeof(System.DBNull) ? _reader.GetString("filename") : "";
			mc_filename = false;
		}
		public void LoadAggregations(Meridian _meridian)
		{
			if((photo_id > 0) && (_meridian.photobank_photosStore.Exists(photo_id)))
			{
				this.pb_photos_photobank_photos = _meridian.photobank_photosStore.Get(photo_id);;
				this.pb_photos_photobank_photos.AddPhotos(this);
			}
		}
		public void DeleteAggregations()
		{
			if(this.pb_photos_photobank_photos != null)
			{
				this.pb_photos_photobank_photos.RemovePhotos(this);
			}
		}
		public void LoadCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public void SaveCompositions(Meridian _meridian)
		{
		}
		public void DeleteCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public string ProtoName
		{
			get { return "photobank_related_photos"; }
		}
		/* metafile template 
		internal class photobank_related_photos_meta
		{
			public long id { get; set; }
			public long photo_id { get; set; }
			public bool original { get; set; }
			public int width { get; set; }
			public int height { get; set; }
			public string photo { get; set; }
			public string filename { get; set; }
		}
		 metafile template */
		public long id
		{
			get
			{
				return m_id;
			}
			set
			{
				if(m_id != value)
				{
					m_id = value != null ? value : 0;
					mc_id = true;
					// call update worker thread;
				}
			}
		}
		public long photo_id
		{
			get
			{
				return m_photo_id;
			}
			set
			{
				if(m_photo_id != value)
				{
					m_photo_id = value != null ? value : 0;
					mc_photo_id = true;
					// call update worker thread;
				}
			}
		}
		public bool original
		{
			get
			{
				return m_original;
			}
			set
			{
				if(m_original != value)
				{
					m_original = value != null ? value : false;
					mc_original = true;
					// call update worker thread;
				}
			}
		}
		public int width
		{
			get
			{
				return m_width;
			}
			set
			{
				if(m_width != value)
				{
					m_width = value != null ? value : 0;
					mc_width = true;
					// call update worker thread;
				}
			}
		}
		public int height
		{
			get
			{
				return m_height;
			}
			set
			{
				if(m_height != value)
				{
					m_height = value != null ? value : 0;
					mc_height = true;
					// call update worker thread;
				}
			}
		}
		public string photo
		{
			get
			{
				return m_photo;
			}
			set
			{
				if(m_photo != value)
				{
					m_photo = value != null ? value : "";
					mc_photo = true;
					// call update worker thread;
				}
			}
		}
		public string filename
		{
			get
			{
				return m_filename;
			}
			set
			{
				if(m_filename != value)
				{
					m_filename = value != null ? value : "";
					mc_filename = true;
					// call update worker thread;
				}
			}
		}
		private List<photobank_photo_prices> pb_prices_photos
		{
			get; set; 
		}
		[ScriptIgnore]
		public IEnumerable<photobank_photo_prices> Prices
		{
			get { return pb_prices_photos; }
		}
		public IEnumerable<photobank_photo_prices> GetPrices()
		{
			return pb_prices_photos;
		}
		public photobank_photo_prices AddPrices(photobank_photo_prices _item, bool _insertToStore = false)
		{
			if(pb_prices_photos.IndexOf(_item) != -1) return _item;
			pb_prices_photos.Add(_item);
			_item.rel_photo_id = id;
			if(_insertToStore && !Meridian.Default.photobank_photo_pricesStore.Exists(_item.id))
			{
				Meridian.Default.photobank_photo_pricesStore.Insert(_item);
				_item.LoadAggregations(Meridian.Default);
			}
			return _item;
		}
		public photobank_photo_prices RemovePrices(photobank_photo_prices _item, bool _complete = false)
		{
			pb_prices_photos.Remove(_item);
			if(_complete) Meridian.Default.photobank_photo_pricesStore.Delete(_item);
			return _item;
		}
		private photobank_photos pb_photos_photobank_photos
		{
			get; set; 
		}
		public photobank_photos GetPhotosPhotobank_photo()
		{
			return pb_photos_photobank_photos ;
		}
	}
}
