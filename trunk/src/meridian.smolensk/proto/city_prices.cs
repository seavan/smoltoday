/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Script.Serialization;
using MySql.Data.MySqlClient;
using meridian.smolensk;
using meridian.smolensk.system;

namespace meridian.smolensk.proto
{
	[MetadataType(typeof(city_prices_meta))]	public partial class city_prices : admin.db.IDatabaseEntity
	{
		public city_prices()
		{
		}
		private long m_id = 0;
		internal bool mc_id { get; private set; }
		private string m_title = "";
		internal bool mc_title { get; private set; }
		private long m_icon_id = 0;
		internal bool mc_icon_id { get; private set; }
		private string m_value = "";
		internal bool mc_value { get; private set; }
		private string m_html = "";
		internal bool mc_html { get; private set; }
		private string m_url_icon = "";
		internal bool mc_url_icon { get; private set; }
		private string m_url_showall = "";
		internal bool mc_url_showall { get; private set; }
		public ILookupValueAspect GetLookupValueAspect(string _fieldName)
		{
			switch (_fieldName)
			{
				case "icon_id": return Geticon_idLookupValueAspect(); break;
				default: throw new SystemException("Aspect LookupValue not found in city_prices");
			}
		}
		public void LoadFromReader(MySqlDataReader _reader)
		{
			m_id = _reader["id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("id") : 0;
			mc_id = false;
			m_title = _reader["title"].GetType() != typeof(System.DBNull) ? _reader.GetString("title") : "";
			mc_title = false;
			m_icon_id = _reader["icon_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("icon_id") : 0;
			mc_icon_id = false;
			m_value = _reader["value"].GetType() != typeof(System.DBNull) ? _reader.GetString("value") : "";
			mc_value = false;
			m_html = _reader["html"].GetType() != typeof(System.DBNull) ? _reader.GetString("html") : "";
			mc_html = false;
			m_url_icon = _reader["url_icon"].GetType() != typeof(System.DBNull) ? _reader.GetString("url_icon") : "";
			mc_url_icon = false;
			m_url_showall = _reader["url_showall"].GetType() != typeof(System.DBNull) ? _reader.GetString("url_showall") : "";
			mc_url_showall = false;
		}
		public void LoadAggregations(Meridian _meridian)
		{
			if((icon_id > 0) && (_meridian.city_prices_iconsStore.Exists(icon_id)))
			{
				this.cp_icons_city_prices_icons = _meridian.city_prices_iconsStore.Get(icon_id);;
				this.cp_icons_city_prices_icons.AddPrices(this);
			}
		}
		public void DeleteAggregations()
		{
			if(this.cp_icons_city_prices_icons != null)
			{
				this.cp_icons_city_prices_icons.RemovePrices(this);
			}
		}
		public void LoadCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public void SaveCompositions(Meridian _meridian)
		{
		}
		public void DeleteCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public string ProtoName
		{
			get { return "city_prices"; }
		}
		/* metafile template 
		internal class city_prices_meta
		{
			public long id { get; set; }
			public string title { get; set; }
			public long icon_id { get; set; }
			public string value { get; set; }
			public string html { get; set; }
			public string url_icon { get; set; }
			public string url_showall { get; set; }
		}
		 metafile template */
		public long id
		{
			get
			{
				return m_id;
			}
			set
			{
				if(m_id != value)
				{
					m_id = value != null ? value : 0;
					mc_id = true;
					// call update worker thread;
				}
			}
		}
		public string title
		{
			get
			{
				return m_title;
			}
			set
			{
				if(m_title != value)
				{
					m_title = value != null ? value : "";
					mc_title = true;
					// call update worker thread;
				}
			}
		}
		public long icon_id
		{
			get
			{
				return m_icon_id;
			}
			set
			{
				if(m_icon_id != value)
				{
					m_icon_id = value != null ? value : 0;
					mc_icon_id = true;
					// call update worker thread;
				}
			}
		}
		public string value
		{
			get
			{
				return m_value;
			}
			set
			{
				if(m_value != value)
				{
					m_value = value != null ? value : "";
					mc_value = true;
					// call update worker thread;
				}
			}
		}
		public string html
		{
			get
			{
				return m_html;
			}
			set
			{
				if(m_html != value)
				{
					m_html = value != null ? value : "";
					mc_html = true;
					// call update worker thread;
				}
			}
		}
		public string url_icon
		{
			get
			{
				return m_url_icon;
			}
			set
			{
				if(m_url_icon != value)
				{
					m_url_icon = value != null ? value : "";
					mc_url_icon = true;
					// call update worker thread;
				}
			}
		}
		public string url_showall
		{
			get
			{
				return m_url_showall;
			}
			set
			{
				if(m_url_showall != value)
				{
					m_url_showall = value != null ? value : "";
					mc_url_showall = true;
					// call update worker thread;
				}
			}
		}
		private city_prices_icons cp_icons_city_prices_icons
		{
			get; set; 
		}
		public city_prices_icons GetPricesCity_prices_icon()
		{
			return cp_icons_city_prices_icons ;
		}
	}
}
