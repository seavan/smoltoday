/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Script.Serialization;
using MySql.Data.MySqlClient;
using meridian.smolensk;
using meridian.smolensk.system;

namespace meridian.smolensk.proto
{
	[MetadataType(typeof(pages_files_meta))]	public partial class pages_files : admin.db.IDatabaseEntity
	{
		public pages_files()
		{
		}
		private long m_id = 0;
		internal bool mc_id { get; private set; }
		private string m_title = "";
		internal bool mc_title { get; private set; }
		private string m_file_name = "";
		internal bool mc_file_name { get; private set; }
		private DateTime m_publish_date = DateTime.MinValue;
		internal bool mc_publish_date { get; private set; }
		private string m_uid = "";
		internal bool mc_uid { get; private set; }
		private string m_extension = "";
		internal bool mc_extension { get; private set; }
		private long m_user_id = 0;
		internal bool mc_user_id { get; private set; }
		private long m_page_id = 0;
		internal bool mc_page_id { get; private set; }
		public void LoadFromReader(MySqlDataReader _reader)
		{
			m_id = _reader["id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("id") : 0;
			mc_id = false;
			m_title = _reader["title"].GetType() != typeof(System.DBNull) ? _reader.GetString("title") : "";
			mc_title = false;
			m_file_name = _reader["file_name"].GetType() != typeof(System.DBNull) ? _reader.GetString("file_name") : "";
			mc_file_name = false;
			m_publish_date = _reader["publish_date"].GetType() != typeof(System.DBNull) ? _reader.GetDateTime("publish_date") : DateTime.MinValue;
			mc_publish_date = false;
			m_uid = _reader["uid"].GetType() != typeof(System.DBNull) ? _reader.GetString("uid") : "";
			mc_uid = false;
			m_extension = _reader["extension"].GetType() != typeof(System.DBNull) ? _reader.GetString("extension") : "";
			mc_extension = false;
			m_user_id = _reader["user_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("user_id") : 0;
			mc_user_id = false;
			m_page_id = _reader["page_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("page_id") : 0;
			mc_page_id = false;
		}
		public void LoadAggregations(Meridian _meridian)
		{
		}
		public void DeleteAggregations()
		{
		}
		public void LoadCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public void SaveCompositions(Meridian _meridian)
		{
		}
		public void DeleteCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public string ProtoName
		{
			get { return "pages_files"; }
		}
		/* metafile template 
		internal class pages_files_meta
		{
			public long id { get; set; }
			public string title { get; set; }
			public string file_name { get; set; }
			public DateTime publish_date { get; set; }
			public string uid { get; set; }
			public string extension { get; set; }
			public long user_id { get; set; }
			public long page_id { get; set; }
		}
		 metafile template */
		public long id
		{
			get
			{
				return m_id;
			}
			set
			{
				if(m_id != value)
				{
					m_id = value != null ? value : 0;
					mc_id = true;
					// call update worker thread;
				}
			}
		}
		public string title
		{
			get
			{
				return m_title;
			}
			set
			{
				if(m_title != value)
				{
					m_title = value != null ? value : "";
					mc_title = true;
					// call update worker thread;
				}
			}
		}
		public string file_name
		{
			get
			{
				return m_file_name;
			}
			set
			{
				if(m_file_name != value)
				{
					m_file_name = value != null ? value : "";
					mc_file_name = true;
					// call update worker thread;
				}
			}
		}
		public DateTime publish_date
		{
			get
			{
				return m_publish_date;
			}
			set
			{
				if(m_publish_date != value)
				{
					m_publish_date = value != null ? value : DateTime.MinValue;
					if(m_publish_date.Year < 1800) value = DateTime.MinValue;
					mc_publish_date = true;
					// call update worker thread;
				}
			}
		}
		public string uid
		{
			get
			{
				return m_uid;
			}
			set
			{
				if(m_uid != value)
				{
					m_uid = value != null ? value : "";
					mc_uid = true;
					// call update worker thread;
				}
			}
		}
		public string extension
		{
			get
			{
				return m_extension;
			}
			set
			{
				if(m_extension != value)
				{
					m_extension = value != null ? value : "";
					mc_extension = true;
					// call update worker thread;
				}
			}
		}
		public long user_id
		{
			get
			{
				return m_user_id;
			}
			set
			{
				if(m_user_id != value)
				{
					m_user_id = value != null ? value : 0;
					mc_user_id = true;
					// call update worker thread;
				}
			}
		}
		public long page_id
		{
			get
			{
				return m_page_id;
			}
			set
			{
				if(m_page_id != value)
				{
					m_page_id = value != null ? value : 0;
					mc_page_id = true;
					// call update worker thread;
				}
			}
		}
	}
}
