/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Script.Serialization;
using MySql.Data.MySqlClient;
using meridian.smolensk;
using meridian.smolensk.system;

namespace meridian.smolensk.proto
{
	[MetadataType(typeof(blog_lastviews_meta))]	public partial class blog_lastviews : admin.db.IDatabaseEntity
	{
		public blog_lastviews()
		{
		}
		private long m_id = 0;
		internal bool mc_id { get; private set; }
		private long m_blog_id = 0;
		internal bool mc_blog_id { get; private set; }
		private long m_account_id = 0;
		internal bool mc_account_id { get; private set; }
		private DateTime m_view_date = DateTime.MinValue;
		internal bool mc_view_date { get; private set; }
		public void LoadFromReader(MySqlDataReader _reader)
		{
			m_id = _reader["id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("id") : 0;
			mc_id = false;
			m_blog_id = _reader["blog_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("blog_id") : 0;
			mc_blog_id = false;
			m_account_id = _reader["account_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("account_id") : 0;
			mc_account_id = false;
			m_view_date = _reader["view_date"].GetType() != typeof(System.DBNull) ? _reader.GetDateTime("view_date") : DateTime.MinValue;
			mc_view_date = false;
		}
		public void LoadAggregations(Meridian _meridian)
		{
			if((blog_id > 0) && (_meridian.blogsStore.Exists(blog_id)))
			{
				this.n_lv_blogs_blogs = _meridian.blogsStore.Get(blog_id);;
				this.n_lv_blogs_blogs.AddLastViews(this);
			}
			if((account_id > 0) && (_meridian.accountsStore.Exists(account_id)))
			{
				this.u_lv_blogs_accounts = _meridian.accountsStore.Get(account_id);;
				this.u_lv_blogs_accounts.AddLastViewsBlogs(this);
			}
		}
		public void DeleteAggregations()
		{
			if(this.n_lv_blogs_blogs != null)
			{
				this.n_lv_blogs_blogs.RemoveLastViews(this);
			}
			if(this.u_lv_blogs_accounts != null)
			{
				this.u_lv_blogs_accounts.RemoveLastViewsBlogs(this);
			}
		}
		public void LoadCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public void SaveCompositions(Meridian _meridian)
		{
		}
		public void DeleteCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public string ProtoName
		{
			get { return "blog_lastviews"; }
		}
		/* metafile template 
		internal class blog_lastviews_meta
		{
			public long id { get; set; }
			public long blog_id { get; set; }
			public long account_id { get; set; }
			public DateTime view_date { get; set; }
		}
		 metafile template */
		public long id
		{
			get
			{
				return m_id;
			}
			set
			{
				if(m_id != value)
				{
					m_id = value != null ? value : 0;
					mc_id = true;
					// call update worker thread;
				}
			}
		}
		public long blog_id
		{
			get
			{
				return m_blog_id;
			}
			set
			{
				if(m_blog_id != value)
				{
					m_blog_id = value != null ? value : 0;
					mc_blog_id = true;
					// call update worker thread;
				}
			}
		}
		public long account_id
		{
			get
			{
				return m_account_id;
			}
			set
			{
				if(m_account_id != value)
				{
					m_account_id = value != null ? value : 0;
					mc_account_id = true;
					// call update worker thread;
				}
			}
		}
		public DateTime view_date
		{
			get
			{
				return m_view_date;
			}
			set
			{
				if(m_view_date != value)
				{
					m_view_date = value != null ? value : DateTime.MinValue;
					if(m_view_date.Year < 1800) value = DateTime.MinValue;
					mc_view_date = true;
					// call update worker thread;
				}
			}
		}
		private blogs n_lv_blogs_blogs
		{
			get; set; 
		}
		public blogs GetLastViewsBlog()
		{
			return n_lv_blogs_blogs ;
		}
		private accounts u_lv_blogs_accounts
		{
			get; set; 
		}
		public accounts GetLastViewsBlogsAccount()
		{
			return u_lv_blogs_accounts ;
		}
	}
}
