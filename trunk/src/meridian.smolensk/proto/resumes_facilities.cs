/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Script.Serialization;
using MySql.Data.MySqlClient;
using meridian.smolensk;
using meridian.smolensk.system;

namespace meridian.smolensk.proto
{
	[MetadataType(typeof(resumes_facilities_meta))]	public partial class resumes_facilities : admin.db.IDatabaseEntity
	{
		public resumes_facilities()
		{
		}
		private long m_id = 0;
		internal bool mc_id { get; private set; }
		private long m_facility_id = 0;
		internal bool mc_facility_id { get; private set; }
		private long m_variant_id = 0;
		internal bool mc_variant_id { get; private set; }
		private long m_resume_id = 0;
		internal bool mc_resume_id { get; private set; }
		public void LoadFromReader(MySqlDataReader _reader)
		{
			m_id = _reader["id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("id") : 0;
			mc_id = false;
			m_facility_id = _reader["facility_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("facility_id") : 0;
			mc_facility_id = false;
			m_variant_id = _reader["variant_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("variant_id") : 0;
			mc_variant_id = false;
			m_resume_id = _reader["resume_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("resume_id") : 0;
			mc_resume_id = false;
		}
		public void LoadAggregations(Meridian _meridian)
		{
			if((facility_id > 0) && (_meridian.vacancy_facilitiesStore.Exists(facility_id)))
			{
				this.va_fa_resumes_vacancy_facilities = _meridian.vacancy_facilitiesStore.Get(facility_id);;
				this.va_fa_resumes_vacancy_facilities.AddResumes(this);
			}
			if((resume_id > 0) && (_meridian.resumesStore.Exists(resume_id)))
			{
				this.re_facilities_resumes = _meridian.resumesStore.Get(resume_id);;
				this.re_facilities_resumes.AddFacilities(this);
			}
		}
		public void DeleteAggregations()
		{
			if(this.va_fa_resumes_vacancy_facilities != null)
			{
				this.va_fa_resumes_vacancy_facilities.RemoveResumes(this);
			}
			if(this.re_facilities_resumes != null)
			{
				this.re_facilities_resumes.RemoveFacilities(this);
			}
		}
		public void LoadCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public void SaveCompositions(Meridian _meridian)
		{
		}
		public void DeleteCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public string ProtoName
		{
			get { return "resumes_facilities"; }
		}
		/* metafile template 
		internal class resumes_facilities_meta
		{
			public long id { get; set; }
			public long facility_id { get; set; }
			public long variant_id { get; set; }
			public long resume_id { get; set; }
		}
		 metafile template */
		public long id
		{
			get
			{
				return m_id;
			}
			set
			{
				if(m_id != value)
				{
					m_id = value != null ? value : 0;
					mc_id = true;
					// call update worker thread;
				}
			}
		}
		public long facility_id
		{
			get
			{
				return m_facility_id;
			}
			set
			{
				if(m_facility_id != value)
				{
					m_facility_id = value != null ? value : 0;
					mc_facility_id = true;
					// call update worker thread;
				}
			}
		}
		public long variant_id
		{
			get
			{
				return m_variant_id;
			}
			set
			{
				if(m_variant_id != value)
				{
					m_variant_id = value != null ? value : 0;
					mc_variant_id = true;
					// call update worker thread;
				}
			}
		}
		public long resume_id
		{
			get
			{
				return m_resume_id;
			}
			set
			{
				if(m_resume_id != value)
				{
					m_resume_id = value != null ? value : 0;
					mc_resume_id = true;
					// call update worker thread;
				}
			}
		}
		private vacancy_facilities va_fa_resumes_vacancy_facilities
		{
			get; set; 
		}
		public vacancy_facilities GetResumesVacancy_facilitie()
		{
			return va_fa_resumes_vacancy_facilities ;
		}
		private resumes re_facilities_resumes
		{
			get; set; 
		}
		public resumes GetFacilitiesResume()
		{
			return re_facilities_resumes ;
		}
	}
}
