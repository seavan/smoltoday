/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Script.Serialization;
using MySql.Data.MySqlClient;
using meridian.smolensk;
using meridian.smolensk.system;

namespace meridian.smolensk.proto
{
	[MetadataType(typeof(resume_links_meta))]	public partial class resume_links : admin.db.IDatabaseEntity
	{
		public resume_links()
		{
		}
		private long m_id = 0;
		internal bool mc_id { get; private set; }
		private string m_url = "";
		internal bool mc_url { get; private set; }
		private long m_resume_id = 0;
		internal bool mc_resume_id { get; private set; }
		public void LoadFromReader(MySqlDataReader _reader)
		{
			m_id = _reader["id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("id") : 0;
			mc_id = false;
			m_url = _reader["url"].GetType() != typeof(System.DBNull) ? _reader.GetString("url") : "";
			mc_url = false;
			m_resume_id = _reader["resume_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("resume_id") : 0;
			mc_resume_id = false;
		}
		public void LoadAggregations(Meridian _meridian)
		{
			if((resume_id > 0) && (_meridian.resumesStore.Exists(resume_id)))
			{
				this.re_links_resumes = _meridian.resumesStore.Get(resume_id);;
				this.re_links_resumes.AddLinks(this);
			}
		}
		public void DeleteAggregations()
		{
			if(this.re_links_resumes != null)
			{
				this.re_links_resumes.RemoveLinks(this);
			}
		}
		public void LoadCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public void SaveCompositions(Meridian _meridian)
		{
		}
		public void DeleteCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public string ProtoName
		{
			get { return "resume_links"; }
		}
		/* metafile template 
		internal class resume_links_meta
		{
			public long id { get; set; }
			public string url { get; set; }
			public long resume_id { get; set; }
		}
		 metafile template */
		public long id
		{
			get
			{
				return m_id;
			}
			set
			{
				if(m_id != value)
				{
					m_id = value != null ? value : 0;
					mc_id = true;
					// call update worker thread;
				}
			}
		}
		public string url
		{
			get
			{
				return m_url;
			}
			set
			{
				if(m_url != value)
				{
					m_url = value != null ? value : "";
					mc_url = true;
					// call update worker thread;
				}
			}
		}
		public long resume_id
		{
			get
			{
				return m_resume_id;
			}
			set
			{
				if(m_resume_id != value)
				{
					m_resume_id = value != null ? value : 0;
					mc_resume_id = true;
					// call update worker thread;
				}
			}
		}
		private resumes re_links_resumes
		{
			get; set; 
		}
		public resumes GetLinksResume()
		{
			return re_links_resumes ;
		}
	}
}
