/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Script.Serialization;
using MySql.Data.MySqlClient;
using meridian.smolensk;
using meridian.smolensk.system;

namespace meridian.smolensk.proto
{
	[MetadataType(typeof(actions_photos_meta))]	public partial class actions_photos : admin.db.IDatabaseEntity
	{
		public actions_photos()
		{
		}
		private long m_id = 0;
		internal bool mc_id { get; private set; }
		private string m_thumbnail = "";
		internal bool mc_thumbnail { get; private set; }
		private string m_normal = "";
		internal bool mc_normal { get; private set; }
		private long m_action_id = 0;
		internal bool mc_action_id { get; private set; }
		private bool m_is_main = false;
		internal bool mc_is_main { get; private set; }
		public void LoadFromReader(MySqlDataReader _reader)
		{
			m_id = _reader["id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("id") : 0;
			mc_id = false;
			m_thumbnail = _reader["thumbnail"].GetType() != typeof(System.DBNull) ? _reader.GetString("thumbnail") : "";
			mc_thumbnail = false;
			m_normal = _reader["normal"].GetType() != typeof(System.DBNull) ? _reader.GetString("normal") : "";
			mc_normal = false;
			m_action_id = _reader["action_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("action_id") : 0;
			mc_action_id = false;
			m_is_main = _reader["is_main"].GetType() != typeof(System.DBNull) ? _reader.GetBoolean("is_main") : false;
			mc_is_main = false;
		}
		public void LoadAggregations(Meridian _meridian)
		{
			if((action_id > 0) && (_meridian.actionsStore.Exists(action_id)))
			{
				this.aphoto_actions_actions = _meridian.actionsStore.Get(action_id);;
				this.aphoto_actions_actions.AddPhotos(this);
			}
		}
		public void DeleteAggregations()
		{
			if(this.aphoto_actions_actions != null)
			{
				this.aphoto_actions_actions.RemovePhotos(this);
			}
		}
		public void LoadCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public void SaveCompositions(Meridian _meridian)
		{
		}
		public void DeleteCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public string ProtoName
		{
			get { return "actions_photos"; }
		}
		/* metafile template 
		internal class actions_photos_meta
		{
			public long id { get; set; }
			public string thumbnail { get; set; }
			public string normal { get; set; }
			public long action_id { get; set; }
			public bool is_main { get; set; }
		}
		 metafile template */
		public long id
		{
			get
			{
				return m_id;
			}
			set
			{
				if(m_id != value)
				{
					m_id = value != null ? value : 0;
					mc_id = true;
					// call update worker thread;
				}
			}
		}
		public string thumbnail
		{
			get
			{
				return m_thumbnail;
			}
			set
			{
				if(m_thumbnail != value)
				{
					m_thumbnail = value != null ? value : "";
					mc_thumbnail = true;
					// call update worker thread;
				}
			}
		}
		public string normal
		{
			get
			{
				return m_normal;
			}
			set
			{
				if(m_normal != value)
				{
					m_normal = value != null ? value : "";
					mc_normal = true;
					// call update worker thread;
				}
			}
		}
		public long action_id
		{
			get
			{
				return m_action_id;
			}
			set
			{
				if(m_action_id != value)
				{
					m_action_id = value != null ? value : 0;
					mc_action_id = true;
					// call update worker thread;
				}
			}
		}
		public bool is_main
		{
			get
			{
				return m_is_main;
			}
			set
			{
				if(m_is_main != value)
				{
					m_is_main = value != null ? value : false;
					mc_is_main = true;
					// call update worker thread;
				}
			}
		}
		private actions aphoto_actions_actions
		{
			get; set; 
		}
		public actions GetPhotosAction()
		{
			return aphoto_actions_actions ;
		}
	}
}
