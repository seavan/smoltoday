/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Script.Serialization;
using MySql.Data.MySqlClient;
using meridian.smolensk;
using meridian.smolensk.system;

namespace meridian.smolensk.proto
{
	[MetadataType(typeof(restaurants_entries_meta))]	public partial class restaurants_entries : admin.db.IDatabaseEntity
	{
		public restaurants_entries()
		{
		}
		private long m_restaurant_id = 0;
		internal bool mc_restaurant_id { get; private set; }
		private long m_entry_id = 0;
		internal bool mc_entry_id { get; private set; }
		private long m_id = 0;
		internal bool mc_id { get; private set; }
		public void LoadFromReader(MySqlDataReader _reader)
		{
			m_restaurant_id = _reader["restaurant_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("restaurant_id") : 0;
			mc_restaurant_id = false;
			m_entry_id = _reader["entry_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("entry_id") : 0;
			mc_entry_id = false;
			m_id = _reader["id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("id") : 0;
			mc_id = false;
		}
		public void LoadAggregations(Meridian _meridian)
		{
			if((restaurant_id > 0) && (_meridian.restaurantsStore.Exists(restaurant_id)))
			{
				this.rre_entries_restaurants = _meridian.restaurantsStore.Get(restaurant_id);;
				this.rre_entries_restaurants.AddEntries(this);
			}
			if((entry_id > 0) && (_meridian.restaurant_entriesStore.Exists(entry_id)))
			{
				this.re_values_restaurant_entries = _meridian.restaurant_entriesStore.Get(entry_id);;
				this.re_values_restaurant_entries.AddEntriesValues(this);
			}
		}
		public void DeleteAggregations()
		{
			if(this.rre_entries_restaurants != null)
			{
				this.rre_entries_restaurants.RemoveEntries(this);
			}
			if(this.re_values_restaurant_entries != null)
			{
				this.re_values_restaurant_entries.RemoveEntriesValues(this);
			}
		}
		public void LoadCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public void SaveCompositions(Meridian _meridian)
		{
		}
		public void DeleteCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public string ProtoName
		{
			get { return "restaurants_entries"; }
		}
		/* metafile template 
		internal class restaurants_entries_meta
		{
			public long restaurant_id { get; set; }
			public long entry_id { get; set; }
			public long id { get; set; }
		}
		 metafile template */
		public long restaurant_id
		{
			get
			{
				return m_restaurant_id;
			}
			set
			{
				if(m_restaurant_id != value)
				{
					m_restaurant_id = value != null ? value : 0;
					mc_restaurant_id = true;
					// call update worker thread;
				}
			}
		}
		public long entry_id
		{
			get
			{
				return m_entry_id;
			}
			set
			{
				if(m_entry_id != value)
				{
					m_entry_id = value != null ? value : 0;
					mc_entry_id = true;
					// call update worker thread;
				}
			}
		}
		public long id
		{
			get
			{
				return m_id;
			}
			set
			{
				if(m_id != value)
				{
					m_id = value != null ? value : 0;
					mc_id = true;
					// call update worker thread;
				}
			}
		}
		private restaurants rre_entries_restaurants
		{
			get; set; 
		}
		public restaurants GetEntriesRestaurant()
		{
			return rre_entries_restaurants ;
		}
		private restaurant_entries re_values_restaurant_entries
		{
			get; set; 
		}
		public restaurant_entries GetEntriesValuesRestaurant_entrie()
		{
			return re_values_restaurant_entries ;
		}
	}
}
